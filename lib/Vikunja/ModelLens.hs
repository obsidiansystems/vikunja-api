{-
   Vikunja API

   # Pagination Every endpoint capable of pagination will return two headers: * `x-pagination-total-pages`: The total number of available pages for this request * `x-pagination-result-count`: The number of items returned for this request. # Rights All endpoints which return a single item (project, task, etc.) - no array - will also return a `x-max-right` header with the max right the user has on this item as an int where `0` is `Read Only`, `1` is `Read & Write` and `2` is `Admin`. This can be used to show or hide ui elements based on the rights the user has. # Errors All errors have an error code and a human-readable error message in addition to the http status code. You should always check for the status code in the response, not only the http status code. Due to limitations in the swagger library we're using for this document, only one error per http status code is documented here. Make sure to check the [error docs](https://vikunja.io/docs/errors/) in Vikunja's documentation for a full list of available error codes. # Authorization **JWT-Auth:** Main authorization method, used for most of the requests. Needs `Authorization: Bearer <jwt-token>`-header to authenticate successfully.  **API Token:** You can create scoped API tokens for your user and use the token to make authenticated requests in the context of that user. The token must be provided via an `Authorization: Bearer <token>` header, similar to jwt auth. See the documentation for the `api` group to manage token creation and revocation.  **BasicAuth:** Only used when requesting tasks via CalDAV. <!-- ReDoc-Inject: <security-definitions> -->

   OpenAPI Version: 3.0.1
   Vikunja API API version: 0.24.6
   Contact: hello@vikunja.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Vikunja.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Vikunja.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import Vikunja.Model
import Vikunja.Core


-- * AuthToken

-- | 'authTokenToken' Lens
authTokenTokenL :: Lens_' AuthToken (Maybe Text)
authTokenTokenL f AuthToken{..} = (\authTokenToken -> AuthToken { authTokenToken, ..} ) <$> f authTokenToken
{-# INLINE authTokenTokenL #-}



-- * BackgroundImage

-- | 'backgroundImageBlurHash' Lens
backgroundImageBlurHashL :: Lens_' BackgroundImage (Maybe Text)
backgroundImageBlurHashL f BackgroundImage{..} = (\backgroundImageBlurHash -> BackgroundImage { backgroundImageBlurHash, ..} ) <$> f backgroundImageBlurHash
{-# INLINE backgroundImageBlurHashL #-}

-- | 'backgroundImageId' Lens
backgroundImageIdL :: Lens_' BackgroundImage (Maybe Text)
backgroundImageIdL f BackgroundImage{..} = (\backgroundImageId -> BackgroundImage { backgroundImageId, ..} ) <$> f backgroundImageId
{-# INLINE backgroundImageIdL #-}

-- | 'backgroundImageInfo' Lens
backgroundImageInfoL :: Lens_' BackgroundImage (Maybe A.Value)
backgroundImageInfoL f BackgroundImage{..} = (\backgroundImageInfo -> BackgroundImage { backgroundImageInfo, ..} ) <$> f backgroundImageInfo
{-# INLINE backgroundImageInfoL #-}

-- | 'backgroundImageThumb' Lens
backgroundImageThumbL :: Lens_' BackgroundImage (Maybe Text)
backgroundImageThumbL f BackgroundImage{..} = (\backgroundImageThumb -> BackgroundImage { backgroundImageThumb, ..} ) <$> f backgroundImageThumb
{-# INLINE backgroundImageThumbL #-}

-- | 'backgroundImageUrl' Lens
backgroundImageUrlL :: Lens_' BackgroundImage (Maybe Text)
backgroundImageUrlL f BackgroundImage{..} = (\backgroundImageUrl -> BackgroundImage { backgroundImageUrl, ..} ) <$> f backgroundImageUrl
{-# INLINE backgroundImageUrlL #-}



-- * FilesFile

-- | 'filesFileCreated' Lens
filesFileCreatedL :: Lens_' FilesFile (Maybe Text)
filesFileCreatedL f FilesFile{..} = (\filesFileCreated -> FilesFile { filesFileCreated, ..} ) <$> f filesFileCreated
{-# INLINE filesFileCreatedL #-}

-- | 'filesFileId' Lens
filesFileIdL :: Lens_' FilesFile (Maybe Int)
filesFileIdL f FilesFile{..} = (\filesFileId -> FilesFile { filesFileId, ..} ) <$> f filesFileId
{-# INLINE filesFileIdL #-}

-- | 'filesFileMime' Lens
filesFileMimeL :: Lens_' FilesFile (Maybe Text)
filesFileMimeL f FilesFile{..} = (\filesFileMime -> FilesFile { filesFileMime, ..} ) <$> f filesFileMime
{-# INLINE filesFileMimeL #-}

-- | 'filesFileName' Lens
filesFileNameL :: Lens_' FilesFile (Maybe Text)
filesFileNameL f FilesFile{..} = (\filesFileName -> FilesFile { filesFileName, ..} ) <$> f filesFileName
{-# INLINE filesFileNameL #-}

-- | 'filesFileSize' Lens
filesFileSizeL :: Lens_' FilesFile (Maybe Int)
filesFileSizeL f FilesFile{..} = (\filesFileSize -> FilesFile { filesFileSize, ..} ) <$> f filesFileSize
{-# INLINE filesFileSizeL #-}



-- * HandlerAuthURL

-- | 'handlerAuthURLUrl' Lens
handlerAuthURLUrlL :: Lens_' HandlerAuthURL (Maybe Text)
handlerAuthURLUrlL f HandlerAuthURL{..} = (\handlerAuthURLUrl -> HandlerAuthURL { handlerAuthURLUrl, ..} ) <$> f handlerAuthURLUrl
{-# INLINE handlerAuthURLUrlL #-}



-- * MicrosofttodoMigration

-- | 'microsofttodoMigrationCode' Lens
microsofttodoMigrationCodeL :: Lens_' MicrosofttodoMigration (Maybe Text)
microsofttodoMigrationCodeL f MicrosofttodoMigration{..} = (\microsofttodoMigrationCode -> MicrosofttodoMigration { microsofttodoMigrationCode, ..} ) <$> f microsofttodoMigrationCode
{-# INLINE microsofttodoMigrationCodeL #-}



-- * MigrationStatus

-- | 'migrationStatusFinishedAt' Lens
migrationStatusFinishedAtL :: Lens_' MigrationStatus (Maybe Text)
migrationStatusFinishedAtL f MigrationStatus{..} = (\migrationStatusFinishedAt -> MigrationStatus { migrationStatusFinishedAt, ..} ) <$> f migrationStatusFinishedAt
{-# INLINE migrationStatusFinishedAtL #-}

-- | 'migrationStatusId' Lens
migrationStatusIdL :: Lens_' MigrationStatus (Maybe Int)
migrationStatusIdL f MigrationStatus{..} = (\migrationStatusId -> MigrationStatus { migrationStatusId, ..} ) <$> f migrationStatusId
{-# INLINE migrationStatusIdL #-}

-- | 'migrationStatusMigratorName' Lens
migrationStatusMigratorNameL :: Lens_' MigrationStatus (Maybe Text)
migrationStatusMigratorNameL f MigrationStatus{..} = (\migrationStatusMigratorName -> MigrationStatus { migrationStatusMigratorName, ..} ) <$> f migrationStatusMigratorName
{-# INLINE migrationStatusMigratorNameL #-}

-- | 'migrationStatusStartedAt' Lens
migrationStatusStartedAtL :: Lens_' MigrationStatus (Maybe Text)
migrationStatusStartedAtL f MigrationStatus{..} = (\migrationStatusStartedAt -> MigrationStatus { migrationStatusStartedAt, ..} ) <$> f migrationStatusStartedAt
{-# INLINE migrationStatusStartedAtL #-}



-- * ModelsAPIToken

-- | 'modelsAPITokenCreated' Lens
modelsAPITokenCreatedL :: Lens_' ModelsAPIToken (Maybe Text)
modelsAPITokenCreatedL f ModelsAPIToken{..} = (\modelsAPITokenCreated -> ModelsAPIToken { modelsAPITokenCreated, ..} ) <$> f modelsAPITokenCreated
{-# INLINE modelsAPITokenCreatedL #-}

-- | 'modelsAPITokenExpiresAt' Lens
modelsAPITokenExpiresAtL :: Lens_' ModelsAPIToken (Maybe Text)
modelsAPITokenExpiresAtL f ModelsAPIToken{..} = (\modelsAPITokenExpiresAt -> ModelsAPIToken { modelsAPITokenExpiresAt, ..} ) <$> f modelsAPITokenExpiresAt
{-# INLINE modelsAPITokenExpiresAtL #-}

-- | 'modelsAPITokenId' Lens
modelsAPITokenIdL :: Lens_' ModelsAPIToken (Maybe Int)
modelsAPITokenIdL f ModelsAPIToken{..} = (\modelsAPITokenId -> ModelsAPIToken { modelsAPITokenId, ..} ) <$> f modelsAPITokenId
{-# INLINE modelsAPITokenIdL #-}

-- | 'modelsAPITokenPermissions' Lens
modelsAPITokenPermissionsL :: Lens_' ModelsAPIToken (Maybe (Map.Map String [Text]))
modelsAPITokenPermissionsL f ModelsAPIToken{..} = (\modelsAPITokenPermissions -> ModelsAPIToken { modelsAPITokenPermissions, ..} ) <$> f modelsAPITokenPermissions
{-# INLINE modelsAPITokenPermissionsL #-}

-- | 'modelsAPITokenTitle' Lens
modelsAPITokenTitleL :: Lens_' ModelsAPIToken (Maybe Text)
modelsAPITokenTitleL f ModelsAPIToken{..} = (\modelsAPITokenTitle -> ModelsAPIToken { modelsAPITokenTitle, ..} ) <$> f modelsAPITokenTitle
{-# INLINE modelsAPITokenTitleL #-}

-- | 'modelsAPITokenToken' Lens
modelsAPITokenTokenL :: Lens_' ModelsAPIToken (Maybe Text)
modelsAPITokenTokenL f ModelsAPIToken{..} = (\modelsAPITokenToken -> ModelsAPIToken { modelsAPITokenToken, ..} ) <$> f modelsAPITokenToken
{-# INLINE modelsAPITokenTokenL #-}



-- * ModelsBucket

-- | 'modelsBucketCount' Lens
modelsBucketCountL :: Lens_' ModelsBucket (Maybe Int)
modelsBucketCountL f ModelsBucket{..} = (\modelsBucketCount -> ModelsBucket { modelsBucketCount, ..} ) <$> f modelsBucketCount
{-# INLINE modelsBucketCountL #-}

-- | 'modelsBucketCreated' Lens
modelsBucketCreatedL :: Lens_' ModelsBucket (Maybe Text)
modelsBucketCreatedL f ModelsBucket{..} = (\modelsBucketCreated -> ModelsBucket { modelsBucketCreated, ..} ) <$> f modelsBucketCreated
{-# INLINE modelsBucketCreatedL #-}

-- | 'modelsBucketCreatedBy' Lens
modelsBucketCreatedByL :: Lens_' ModelsBucket (Maybe UserUser)
modelsBucketCreatedByL f ModelsBucket{..} = (\modelsBucketCreatedBy -> ModelsBucket { modelsBucketCreatedBy, ..} ) <$> f modelsBucketCreatedBy
{-# INLINE modelsBucketCreatedByL #-}

-- | 'modelsBucketId' Lens
modelsBucketIdL :: Lens_' ModelsBucket (Maybe Int)
modelsBucketIdL f ModelsBucket{..} = (\modelsBucketId -> ModelsBucket { modelsBucketId, ..} ) <$> f modelsBucketId
{-# INLINE modelsBucketIdL #-}

-- | 'modelsBucketLimit' Lens
modelsBucketLimitL :: Lens_' ModelsBucket (Maybe Int)
modelsBucketLimitL f ModelsBucket{..} = (\modelsBucketLimit -> ModelsBucket { modelsBucketLimit, ..} ) <$> f modelsBucketLimit
{-# INLINE modelsBucketLimitL #-}

-- | 'modelsBucketPosition' Lens
modelsBucketPositionL :: Lens_' ModelsBucket (Maybe Double)
modelsBucketPositionL f ModelsBucket{..} = (\modelsBucketPosition -> ModelsBucket { modelsBucketPosition, ..} ) <$> f modelsBucketPosition
{-# INLINE modelsBucketPositionL #-}

-- | 'modelsBucketProjectViewId' Lens
modelsBucketProjectViewIdL :: Lens_' ModelsBucket (Maybe Int)
modelsBucketProjectViewIdL f ModelsBucket{..} = (\modelsBucketProjectViewId -> ModelsBucket { modelsBucketProjectViewId, ..} ) <$> f modelsBucketProjectViewId
{-# INLINE modelsBucketProjectViewIdL #-}

-- | 'modelsBucketTasks' Lens
modelsBucketTasksL :: Lens_' ModelsBucket (Maybe [ModelsTask])
modelsBucketTasksL f ModelsBucket{..} = (\modelsBucketTasks -> ModelsBucket { modelsBucketTasks, ..} ) <$> f modelsBucketTasks
{-# INLINE modelsBucketTasksL #-}

-- | 'modelsBucketTitle' Lens
modelsBucketTitleL :: Lens_' ModelsBucket (Maybe Text)
modelsBucketTitleL f ModelsBucket{..} = (\modelsBucketTitle -> ModelsBucket { modelsBucketTitle, ..} ) <$> f modelsBucketTitle
{-# INLINE modelsBucketTitleL #-}

-- | 'modelsBucketUpdated' Lens
modelsBucketUpdatedL :: Lens_' ModelsBucket (Maybe Text)
modelsBucketUpdatedL f ModelsBucket{..} = (\modelsBucketUpdated -> ModelsBucket { modelsBucketUpdated, ..} ) <$> f modelsBucketUpdated
{-# INLINE modelsBucketUpdatedL #-}



-- * ModelsBucketConfigurationModeKind



-- * ModelsBulkAssignees

-- | 'modelsBulkAssigneesAssignees' Lens
modelsBulkAssigneesAssigneesL :: Lens_' ModelsBulkAssignees (Maybe [UserUser])
modelsBulkAssigneesAssigneesL f ModelsBulkAssignees{..} = (\modelsBulkAssigneesAssignees -> ModelsBulkAssignees { modelsBulkAssigneesAssignees, ..} ) <$> f modelsBulkAssigneesAssignees
{-# INLINE modelsBulkAssigneesAssigneesL #-}



-- * ModelsBulkTask

-- | 'modelsBulkTaskAssignees' Lens
modelsBulkTaskAssigneesL :: Lens_' ModelsBulkTask (Maybe [UserUser])
modelsBulkTaskAssigneesL f ModelsBulkTask{..} = (\modelsBulkTaskAssignees -> ModelsBulkTask { modelsBulkTaskAssignees, ..} ) <$> f modelsBulkTaskAssignees
{-# INLINE modelsBulkTaskAssigneesL #-}

-- | 'modelsBulkTaskAttachments' Lens
modelsBulkTaskAttachmentsL :: Lens_' ModelsBulkTask (Maybe [ModelsTaskAttachment])
modelsBulkTaskAttachmentsL f ModelsBulkTask{..} = (\modelsBulkTaskAttachments -> ModelsBulkTask { modelsBulkTaskAttachments, ..} ) <$> f modelsBulkTaskAttachments
{-# INLINE modelsBulkTaskAttachmentsL #-}

-- | 'modelsBulkTaskBucketId' Lens
modelsBulkTaskBucketIdL :: Lens_' ModelsBulkTask (Maybe Int)
modelsBulkTaskBucketIdL f ModelsBulkTask{..} = (\modelsBulkTaskBucketId -> ModelsBulkTask { modelsBulkTaskBucketId, ..} ) <$> f modelsBulkTaskBucketId
{-# INLINE modelsBulkTaskBucketIdL #-}

-- | 'modelsBulkTaskCoverImageAttachmentId' Lens
modelsBulkTaskCoverImageAttachmentIdL :: Lens_' ModelsBulkTask (Maybe Int)
modelsBulkTaskCoverImageAttachmentIdL f ModelsBulkTask{..} = (\modelsBulkTaskCoverImageAttachmentId -> ModelsBulkTask { modelsBulkTaskCoverImageAttachmentId, ..} ) <$> f modelsBulkTaskCoverImageAttachmentId
{-# INLINE modelsBulkTaskCoverImageAttachmentIdL #-}

-- | 'modelsBulkTaskCreated' Lens
modelsBulkTaskCreatedL :: Lens_' ModelsBulkTask (Maybe Text)
modelsBulkTaskCreatedL f ModelsBulkTask{..} = (\modelsBulkTaskCreated -> ModelsBulkTask { modelsBulkTaskCreated, ..} ) <$> f modelsBulkTaskCreated
{-# INLINE modelsBulkTaskCreatedL #-}

-- | 'modelsBulkTaskCreatedBy' Lens
modelsBulkTaskCreatedByL :: Lens_' ModelsBulkTask (Maybe UserUser)
modelsBulkTaskCreatedByL f ModelsBulkTask{..} = (\modelsBulkTaskCreatedBy -> ModelsBulkTask { modelsBulkTaskCreatedBy, ..} ) <$> f modelsBulkTaskCreatedBy
{-# INLINE modelsBulkTaskCreatedByL #-}

-- | 'modelsBulkTaskDescription' Lens
modelsBulkTaskDescriptionL :: Lens_' ModelsBulkTask (Maybe Text)
modelsBulkTaskDescriptionL f ModelsBulkTask{..} = (\modelsBulkTaskDescription -> ModelsBulkTask { modelsBulkTaskDescription, ..} ) <$> f modelsBulkTaskDescription
{-# INLINE modelsBulkTaskDescriptionL #-}

-- | 'modelsBulkTaskDone' Lens
modelsBulkTaskDoneL :: Lens_' ModelsBulkTask (Maybe Bool)
modelsBulkTaskDoneL f ModelsBulkTask{..} = (\modelsBulkTaskDone -> ModelsBulkTask { modelsBulkTaskDone, ..} ) <$> f modelsBulkTaskDone
{-# INLINE modelsBulkTaskDoneL #-}

-- | 'modelsBulkTaskDoneAt' Lens
modelsBulkTaskDoneAtL :: Lens_' ModelsBulkTask (Maybe Text)
modelsBulkTaskDoneAtL f ModelsBulkTask{..} = (\modelsBulkTaskDoneAt -> ModelsBulkTask { modelsBulkTaskDoneAt, ..} ) <$> f modelsBulkTaskDoneAt
{-# INLINE modelsBulkTaskDoneAtL #-}

-- | 'modelsBulkTaskDueDate' Lens
modelsBulkTaskDueDateL :: Lens_' ModelsBulkTask (Maybe Text)
modelsBulkTaskDueDateL f ModelsBulkTask{..} = (\modelsBulkTaskDueDate -> ModelsBulkTask { modelsBulkTaskDueDate, ..} ) <$> f modelsBulkTaskDueDate
{-# INLINE modelsBulkTaskDueDateL #-}

-- | 'modelsBulkTaskEndDate' Lens
modelsBulkTaskEndDateL :: Lens_' ModelsBulkTask (Maybe Text)
modelsBulkTaskEndDateL f ModelsBulkTask{..} = (\modelsBulkTaskEndDate -> ModelsBulkTask { modelsBulkTaskEndDate, ..} ) <$> f modelsBulkTaskEndDate
{-# INLINE modelsBulkTaskEndDateL #-}

-- | 'modelsBulkTaskHexColor' Lens
modelsBulkTaskHexColorL :: Lens_' ModelsBulkTask (Maybe Text)
modelsBulkTaskHexColorL f ModelsBulkTask{..} = (\modelsBulkTaskHexColor -> ModelsBulkTask { modelsBulkTaskHexColor, ..} ) <$> f modelsBulkTaskHexColor
{-# INLINE modelsBulkTaskHexColorL #-}

-- | 'modelsBulkTaskId' Lens
modelsBulkTaskIdL :: Lens_' ModelsBulkTask (Maybe Int)
modelsBulkTaskIdL f ModelsBulkTask{..} = (\modelsBulkTaskId -> ModelsBulkTask { modelsBulkTaskId, ..} ) <$> f modelsBulkTaskId
{-# INLINE modelsBulkTaskIdL #-}

-- | 'modelsBulkTaskIdentifier' Lens
modelsBulkTaskIdentifierL :: Lens_' ModelsBulkTask (Maybe Text)
modelsBulkTaskIdentifierL f ModelsBulkTask{..} = (\modelsBulkTaskIdentifier -> ModelsBulkTask { modelsBulkTaskIdentifier, ..} ) <$> f modelsBulkTaskIdentifier
{-# INLINE modelsBulkTaskIdentifierL #-}

-- | 'modelsBulkTaskIndex' Lens
modelsBulkTaskIndexL :: Lens_' ModelsBulkTask (Maybe Int)
modelsBulkTaskIndexL f ModelsBulkTask{..} = (\modelsBulkTaskIndex -> ModelsBulkTask { modelsBulkTaskIndex, ..} ) <$> f modelsBulkTaskIndex
{-# INLINE modelsBulkTaskIndexL #-}

-- | 'modelsBulkTaskIsFavorite' Lens
modelsBulkTaskIsFavoriteL :: Lens_' ModelsBulkTask (Maybe Bool)
modelsBulkTaskIsFavoriteL f ModelsBulkTask{..} = (\modelsBulkTaskIsFavorite -> ModelsBulkTask { modelsBulkTaskIsFavorite, ..} ) <$> f modelsBulkTaskIsFavorite
{-# INLINE modelsBulkTaskIsFavoriteL #-}

-- | 'modelsBulkTaskLabels' Lens
modelsBulkTaskLabelsL :: Lens_' ModelsBulkTask (Maybe [ModelsLabel])
modelsBulkTaskLabelsL f ModelsBulkTask{..} = (\modelsBulkTaskLabels -> ModelsBulkTask { modelsBulkTaskLabels, ..} ) <$> f modelsBulkTaskLabels
{-# INLINE modelsBulkTaskLabelsL #-}

-- | 'modelsBulkTaskPercentDone' Lens
modelsBulkTaskPercentDoneL :: Lens_' ModelsBulkTask (Maybe Double)
modelsBulkTaskPercentDoneL f ModelsBulkTask{..} = (\modelsBulkTaskPercentDone -> ModelsBulkTask { modelsBulkTaskPercentDone, ..} ) <$> f modelsBulkTaskPercentDone
{-# INLINE modelsBulkTaskPercentDoneL #-}

-- | 'modelsBulkTaskPosition' Lens
modelsBulkTaskPositionL :: Lens_' ModelsBulkTask (Maybe Double)
modelsBulkTaskPositionL f ModelsBulkTask{..} = (\modelsBulkTaskPosition -> ModelsBulkTask { modelsBulkTaskPosition, ..} ) <$> f modelsBulkTaskPosition
{-# INLINE modelsBulkTaskPositionL #-}

-- | 'modelsBulkTaskPriority' Lens
modelsBulkTaskPriorityL :: Lens_' ModelsBulkTask (Maybe Int)
modelsBulkTaskPriorityL f ModelsBulkTask{..} = (\modelsBulkTaskPriority -> ModelsBulkTask { modelsBulkTaskPriority, ..} ) <$> f modelsBulkTaskPriority
{-# INLINE modelsBulkTaskPriorityL #-}

-- | 'modelsBulkTaskProjectId' Lens
modelsBulkTaskProjectIdL :: Lens_' ModelsBulkTask (Maybe Int)
modelsBulkTaskProjectIdL f ModelsBulkTask{..} = (\modelsBulkTaskProjectId -> ModelsBulkTask { modelsBulkTaskProjectId, ..} ) <$> f modelsBulkTaskProjectId
{-# INLINE modelsBulkTaskProjectIdL #-}

-- | 'modelsBulkTaskReactions' Lens
modelsBulkTaskReactionsL :: Lens_' ModelsBulkTask (Maybe (Map.Map String [UserUser]))
modelsBulkTaskReactionsL f ModelsBulkTask{..} = (\modelsBulkTaskReactions -> ModelsBulkTask { modelsBulkTaskReactions, ..} ) <$> f modelsBulkTaskReactions
{-# INLINE modelsBulkTaskReactionsL #-}

-- | 'modelsBulkTaskRelatedTasks' Lens
modelsBulkTaskRelatedTasksL :: Lens_' ModelsBulkTask (Maybe (Map.Map String [ModelsTask]))
modelsBulkTaskRelatedTasksL f ModelsBulkTask{..} = (\modelsBulkTaskRelatedTasks -> ModelsBulkTask { modelsBulkTaskRelatedTasks, ..} ) <$> f modelsBulkTaskRelatedTasks
{-# INLINE modelsBulkTaskRelatedTasksL #-}

-- | 'modelsBulkTaskReminders' Lens
modelsBulkTaskRemindersL :: Lens_' ModelsBulkTask (Maybe [ModelsTaskReminder])
modelsBulkTaskRemindersL f ModelsBulkTask{..} = (\modelsBulkTaskReminders -> ModelsBulkTask { modelsBulkTaskReminders, ..} ) <$> f modelsBulkTaskReminders
{-# INLINE modelsBulkTaskRemindersL #-}

-- | 'modelsBulkTaskRepeatAfter' Lens
modelsBulkTaskRepeatAfterL :: Lens_' ModelsBulkTask (Maybe Int)
modelsBulkTaskRepeatAfterL f ModelsBulkTask{..} = (\modelsBulkTaskRepeatAfter -> ModelsBulkTask { modelsBulkTaskRepeatAfter, ..} ) <$> f modelsBulkTaskRepeatAfter
{-# INLINE modelsBulkTaskRepeatAfterL #-}

-- | 'modelsBulkTaskRepeatMode' Lens
modelsBulkTaskRepeatModeL :: Lens_' ModelsBulkTask (Maybe ModelsTaskRepeatMode)
modelsBulkTaskRepeatModeL f ModelsBulkTask{..} = (\modelsBulkTaskRepeatMode -> ModelsBulkTask { modelsBulkTaskRepeatMode, ..} ) <$> f modelsBulkTaskRepeatMode
{-# INLINE modelsBulkTaskRepeatModeL #-}

-- | 'modelsBulkTaskStartDate' Lens
modelsBulkTaskStartDateL :: Lens_' ModelsBulkTask (Maybe Text)
modelsBulkTaskStartDateL f ModelsBulkTask{..} = (\modelsBulkTaskStartDate -> ModelsBulkTask { modelsBulkTaskStartDate, ..} ) <$> f modelsBulkTaskStartDate
{-# INLINE modelsBulkTaskStartDateL #-}

-- | 'modelsBulkTaskSubscription' Lens
modelsBulkTaskSubscriptionL :: Lens_' ModelsBulkTask (Maybe ModelsSubscription)
modelsBulkTaskSubscriptionL f ModelsBulkTask{..} = (\modelsBulkTaskSubscription -> ModelsBulkTask { modelsBulkTaskSubscription, ..} ) <$> f modelsBulkTaskSubscription
{-# INLINE modelsBulkTaskSubscriptionL #-}

-- | 'modelsBulkTaskTaskIds' Lens
modelsBulkTaskTaskIdsL :: Lens_' ModelsBulkTask (Maybe [Int])
modelsBulkTaskTaskIdsL f ModelsBulkTask{..} = (\modelsBulkTaskTaskIds -> ModelsBulkTask { modelsBulkTaskTaskIds, ..} ) <$> f modelsBulkTaskTaskIds
{-# INLINE modelsBulkTaskTaskIdsL #-}

-- | 'modelsBulkTaskTitle' Lens
modelsBulkTaskTitleL :: Lens_' ModelsBulkTask (Maybe Text)
modelsBulkTaskTitleL f ModelsBulkTask{..} = (\modelsBulkTaskTitle -> ModelsBulkTask { modelsBulkTaskTitle, ..} ) <$> f modelsBulkTaskTitle
{-# INLINE modelsBulkTaskTitleL #-}

-- | 'modelsBulkTaskUpdated' Lens
modelsBulkTaskUpdatedL :: Lens_' ModelsBulkTask (Maybe Text)
modelsBulkTaskUpdatedL f ModelsBulkTask{..} = (\modelsBulkTaskUpdated -> ModelsBulkTask { modelsBulkTaskUpdated, ..} ) <$> f modelsBulkTaskUpdated
{-# INLINE modelsBulkTaskUpdatedL #-}



-- * ModelsDatabaseNotifications

-- | 'modelsDatabaseNotificationsCreated' Lens
modelsDatabaseNotificationsCreatedL :: Lens_' ModelsDatabaseNotifications (Maybe Text)
modelsDatabaseNotificationsCreatedL f ModelsDatabaseNotifications{..} = (\modelsDatabaseNotificationsCreated -> ModelsDatabaseNotifications { modelsDatabaseNotificationsCreated, ..} ) <$> f modelsDatabaseNotificationsCreated
{-# INLINE modelsDatabaseNotificationsCreatedL #-}

-- | 'modelsDatabaseNotificationsId' Lens
modelsDatabaseNotificationsIdL :: Lens_' ModelsDatabaseNotifications (Maybe Int)
modelsDatabaseNotificationsIdL f ModelsDatabaseNotifications{..} = (\modelsDatabaseNotificationsId -> ModelsDatabaseNotifications { modelsDatabaseNotificationsId, ..} ) <$> f modelsDatabaseNotificationsId
{-# INLINE modelsDatabaseNotificationsIdL #-}

-- | 'modelsDatabaseNotificationsName' Lens
modelsDatabaseNotificationsNameL :: Lens_' ModelsDatabaseNotifications (Maybe Text)
modelsDatabaseNotificationsNameL f ModelsDatabaseNotifications{..} = (\modelsDatabaseNotificationsName -> ModelsDatabaseNotifications { modelsDatabaseNotificationsName, ..} ) <$> f modelsDatabaseNotificationsName
{-# INLINE modelsDatabaseNotificationsNameL #-}

-- | 'modelsDatabaseNotificationsNotification' Lens
modelsDatabaseNotificationsNotificationL :: Lens_' ModelsDatabaseNotifications (Maybe A.Value)
modelsDatabaseNotificationsNotificationL f ModelsDatabaseNotifications{..} = (\modelsDatabaseNotificationsNotification -> ModelsDatabaseNotifications { modelsDatabaseNotificationsNotification, ..} ) <$> f modelsDatabaseNotificationsNotification
{-# INLINE modelsDatabaseNotificationsNotificationL #-}

-- | 'modelsDatabaseNotificationsRead' Lens
modelsDatabaseNotificationsReadL :: Lens_' ModelsDatabaseNotifications (Maybe Bool)
modelsDatabaseNotificationsReadL f ModelsDatabaseNotifications{..} = (\modelsDatabaseNotificationsRead -> ModelsDatabaseNotifications { modelsDatabaseNotificationsRead, ..} ) <$> f modelsDatabaseNotificationsRead
{-# INLINE modelsDatabaseNotificationsReadL #-}

-- | 'modelsDatabaseNotificationsReadAt' Lens
modelsDatabaseNotificationsReadAtL :: Lens_' ModelsDatabaseNotifications (Maybe Text)
modelsDatabaseNotificationsReadAtL f ModelsDatabaseNotifications{..} = (\modelsDatabaseNotificationsReadAt -> ModelsDatabaseNotifications { modelsDatabaseNotificationsReadAt, ..} ) <$> f modelsDatabaseNotificationsReadAt
{-# INLINE modelsDatabaseNotificationsReadAtL #-}



-- * ModelsLabel

-- | 'modelsLabelCreated' Lens
modelsLabelCreatedL :: Lens_' ModelsLabel (Maybe Text)
modelsLabelCreatedL f ModelsLabel{..} = (\modelsLabelCreated -> ModelsLabel { modelsLabelCreated, ..} ) <$> f modelsLabelCreated
{-# INLINE modelsLabelCreatedL #-}

-- | 'modelsLabelCreatedBy' Lens
modelsLabelCreatedByL :: Lens_' ModelsLabel (Maybe UserUser)
modelsLabelCreatedByL f ModelsLabel{..} = (\modelsLabelCreatedBy -> ModelsLabel { modelsLabelCreatedBy, ..} ) <$> f modelsLabelCreatedBy
{-# INLINE modelsLabelCreatedByL #-}

-- | 'modelsLabelDescription' Lens
modelsLabelDescriptionL :: Lens_' ModelsLabel (Maybe Text)
modelsLabelDescriptionL f ModelsLabel{..} = (\modelsLabelDescription -> ModelsLabel { modelsLabelDescription, ..} ) <$> f modelsLabelDescription
{-# INLINE modelsLabelDescriptionL #-}

-- | 'modelsLabelHexColor' Lens
modelsLabelHexColorL :: Lens_' ModelsLabel (Maybe Text)
modelsLabelHexColorL f ModelsLabel{..} = (\modelsLabelHexColor -> ModelsLabel { modelsLabelHexColor, ..} ) <$> f modelsLabelHexColor
{-# INLINE modelsLabelHexColorL #-}

-- | 'modelsLabelId' Lens
modelsLabelIdL :: Lens_' ModelsLabel (Maybe Int)
modelsLabelIdL f ModelsLabel{..} = (\modelsLabelId -> ModelsLabel { modelsLabelId, ..} ) <$> f modelsLabelId
{-# INLINE modelsLabelIdL #-}

-- | 'modelsLabelTitle' Lens
modelsLabelTitleL :: Lens_' ModelsLabel (Maybe Text)
modelsLabelTitleL f ModelsLabel{..} = (\modelsLabelTitle -> ModelsLabel { modelsLabelTitle, ..} ) <$> f modelsLabelTitle
{-# INLINE modelsLabelTitleL #-}

-- | 'modelsLabelUpdated' Lens
modelsLabelUpdatedL :: Lens_' ModelsLabel (Maybe Text)
modelsLabelUpdatedL f ModelsLabel{..} = (\modelsLabelUpdated -> ModelsLabel { modelsLabelUpdated, ..} ) <$> f modelsLabelUpdated
{-# INLINE modelsLabelUpdatedL #-}



-- * ModelsLabelTask

-- | 'modelsLabelTaskCreated' Lens
modelsLabelTaskCreatedL :: Lens_' ModelsLabelTask (Maybe Text)
modelsLabelTaskCreatedL f ModelsLabelTask{..} = (\modelsLabelTaskCreated -> ModelsLabelTask { modelsLabelTaskCreated, ..} ) <$> f modelsLabelTaskCreated
{-# INLINE modelsLabelTaskCreatedL #-}

-- | 'modelsLabelTaskLabelId' Lens
modelsLabelTaskLabelIdL :: Lens_' ModelsLabelTask (Maybe Int)
modelsLabelTaskLabelIdL f ModelsLabelTask{..} = (\modelsLabelTaskLabelId -> ModelsLabelTask { modelsLabelTaskLabelId, ..} ) <$> f modelsLabelTaskLabelId
{-# INLINE modelsLabelTaskLabelIdL #-}



-- * ModelsLabelTaskBulk

-- | 'modelsLabelTaskBulkLabels' Lens
modelsLabelTaskBulkLabelsL :: Lens_' ModelsLabelTaskBulk (Maybe [ModelsLabel])
modelsLabelTaskBulkLabelsL f ModelsLabelTaskBulk{..} = (\modelsLabelTaskBulkLabels -> ModelsLabelTaskBulk { modelsLabelTaskBulkLabels, ..} ) <$> f modelsLabelTaskBulkLabels
{-# INLINE modelsLabelTaskBulkLabelsL #-}



-- * ModelsLinkSharing

-- | 'modelsLinkSharingCreated' Lens
modelsLinkSharingCreatedL :: Lens_' ModelsLinkSharing (Maybe Text)
modelsLinkSharingCreatedL f ModelsLinkSharing{..} = (\modelsLinkSharingCreated -> ModelsLinkSharing { modelsLinkSharingCreated, ..} ) <$> f modelsLinkSharingCreated
{-# INLINE modelsLinkSharingCreatedL #-}

-- | 'modelsLinkSharingHash' Lens
modelsLinkSharingHashL :: Lens_' ModelsLinkSharing (Maybe Text)
modelsLinkSharingHashL f ModelsLinkSharing{..} = (\modelsLinkSharingHash -> ModelsLinkSharing { modelsLinkSharingHash, ..} ) <$> f modelsLinkSharingHash
{-# INLINE modelsLinkSharingHashL #-}

-- | 'modelsLinkSharingId' Lens
modelsLinkSharingIdL :: Lens_' ModelsLinkSharing (Maybe Int)
modelsLinkSharingIdL f ModelsLinkSharing{..} = (\modelsLinkSharingId -> ModelsLinkSharing { modelsLinkSharingId, ..} ) <$> f modelsLinkSharingId
{-# INLINE modelsLinkSharingIdL #-}

-- | 'modelsLinkSharingName' Lens
modelsLinkSharingNameL :: Lens_' ModelsLinkSharing (Maybe Text)
modelsLinkSharingNameL f ModelsLinkSharing{..} = (\modelsLinkSharingName -> ModelsLinkSharing { modelsLinkSharingName, ..} ) <$> f modelsLinkSharingName
{-# INLINE modelsLinkSharingNameL #-}

-- | 'modelsLinkSharingPassword' Lens
modelsLinkSharingPasswordL :: Lens_' ModelsLinkSharing (Maybe Text)
modelsLinkSharingPasswordL f ModelsLinkSharing{..} = (\modelsLinkSharingPassword -> ModelsLinkSharing { modelsLinkSharingPassword, ..} ) <$> f modelsLinkSharingPassword
{-# INLINE modelsLinkSharingPasswordL #-}

-- | 'modelsLinkSharingRight' Lens
modelsLinkSharingRightL :: Lens_' ModelsLinkSharing (Maybe ModelsRight)
modelsLinkSharingRightL f ModelsLinkSharing{..} = (\modelsLinkSharingRight -> ModelsLinkSharing { modelsLinkSharingRight, ..} ) <$> f modelsLinkSharingRight
{-# INLINE modelsLinkSharingRightL #-}

-- | 'modelsLinkSharingSharedBy' Lens
modelsLinkSharingSharedByL :: Lens_' ModelsLinkSharing (Maybe UserUser)
modelsLinkSharingSharedByL f ModelsLinkSharing{..} = (\modelsLinkSharingSharedBy -> ModelsLinkSharing { modelsLinkSharingSharedBy, ..} ) <$> f modelsLinkSharingSharedBy
{-# INLINE modelsLinkSharingSharedByL #-}

-- | 'modelsLinkSharingSharingType' Lens
modelsLinkSharingSharingTypeL :: Lens_' ModelsLinkSharing (Maybe ModelsSharingType)
modelsLinkSharingSharingTypeL f ModelsLinkSharing{..} = (\modelsLinkSharingSharingType -> ModelsLinkSharing { modelsLinkSharingSharingType, ..} ) <$> f modelsLinkSharingSharingType
{-# INLINE modelsLinkSharingSharingTypeL #-}

-- | 'modelsLinkSharingUpdated' Lens
modelsLinkSharingUpdatedL :: Lens_' ModelsLinkSharing (Maybe Text)
modelsLinkSharingUpdatedL f ModelsLinkSharing{..} = (\modelsLinkSharingUpdated -> ModelsLinkSharing { modelsLinkSharingUpdated, ..} ) <$> f modelsLinkSharingUpdated
{-# INLINE modelsLinkSharingUpdatedL #-}



-- * ModelsMessage

-- | 'modelsMessageMessage' Lens
modelsMessageMessageL :: Lens_' ModelsMessage (Maybe Text)
modelsMessageMessageL f ModelsMessage{..} = (\modelsMessageMessage -> ModelsMessage { modelsMessageMessage, ..} ) <$> f modelsMessageMessage
{-# INLINE modelsMessageMessageL #-}



-- * ModelsProject

-- | 'modelsProjectBackgroundBlurHash' Lens
modelsProjectBackgroundBlurHashL :: Lens_' ModelsProject (Maybe Text)
modelsProjectBackgroundBlurHashL f ModelsProject{..} = (\modelsProjectBackgroundBlurHash -> ModelsProject { modelsProjectBackgroundBlurHash, ..} ) <$> f modelsProjectBackgroundBlurHash
{-# INLINE modelsProjectBackgroundBlurHashL #-}

-- | 'modelsProjectBackgroundInformation' Lens
modelsProjectBackgroundInformationL :: Lens_' ModelsProject (Maybe A.Value)
modelsProjectBackgroundInformationL f ModelsProject{..} = (\modelsProjectBackgroundInformation -> ModelsProject { modelsProjectBackgroundInformation, ..} ) <$> f modelsProjectBackgroundInformation
{-# INLINE modelsProjectBackgroundInformationL #-}

-- | 'modelsProjectCreated' Lens
modelsProjectCreatedL :: Lens_' ModelsProject (Maybe Text)
modelsProjectCreatedL f ModelsProject{..} = (\modelsProjectCreated -> ModelsProject { modelsProjectCreated, ..} ) <$> f modelsProjectCreated
{-# INLINE modelsProjectCreatedL #-}

-- | 'modelsProjectDescription' Lens
modelsProjectDescriptionL :: Lens_' ModelsProject (Maybe Text)
modelsProjectDescriptionL f ModelsProject{..} = (\modelsProjectDescription -> ModelsProject { modelsProjectDescription, ..} ) <$> f modelsProjectDescription
{-# INLINE modelsProjectDescriptionL #-}

-- | 'modelsProjectHexColor' Lens
modelsProjectHexColorL :: Lens_' ModelsProject (Maybe Text)
modelsProjectHexColorL f ModelsProject{..} = (\modelsProjectHexColor -> ModelsProject { modelsProjectHexColor, ..} ) <$> f modelsProjectHexColor
{-# INLINE modelsProjectHexColorL #-}

-- | 'modelsProjectId' Lens
modelsProjectIdL :: Lens_' ModelsProject (Maybe Int)
modelsProjectIdL f ModelsProject{..} = (\modelsProjectId -> ModelsProject { modelsProjectId, ..} ) <$> f modelsProjectId
{-# INLINE modelsProjectIdL #-}

-- | 'modelsProjectIdentifier' Lens
modelsProjectIdentifierL :: Lens_' ModelsProject (Maybe Text)
modelsProjectIdentifierL f ModelsProject{..} = (\modelsProjectIdentifier -> ModelsProject { modelsProjectIdentifier, ..} ) <$> f modelsProjectIdentifier
{-# INLINE modelsProjectIdentifierL #-}

-- | 'modelsProjectIsArchived' Lens
modelsProjectIsArchivedL :: Lens_' ModelsProject (Maybe Bool)
modelsProjectIsArchivedL f ModelsProject{..} = (\modelsProjectIsArchived -> ModelsProject { modelsProjectIsArchived, ..} ) <$> f modelsProjectIsArchived
{-# INLINE modelsProjectIsArchivedL #-}

-- | 'modelsProjectIsFavorite' Lens
modelsProjectIsFavoriteL :: Lens_' ModelsProject (Maybe Bool)
modelsProjectIsFavoriteL f ModelsProject{..} = (\modelsProjectIsFavorite -> ModelsProject { modelsProjectIsFavorite, ..} ) <$> f modelsProjectIsFavorite
{-# INLINE modelsProjectIsFavoriteL #-}

-- | 'modelsProjectOwner' Lens
modelsProjectOwnerL :: Lens_' ModelsProject (Maybe UserUser)
modelsProjectOwnerL f ModelsProject{..} = (\modelsProjectOwner -> ModelsProject { modelsProjectOwner, ..} ) <$> f modelsProjectOwner
{-# INLINE modelsProjectOwnerL #-}

-- | 'modelsProjectParentProjectId' Lens
modelsProjectParentProjectIdL :: Lens_' ModelsProject (Maybe Int)
modelsProjectParentProjectIdL f ModelsProject{..} = (\modelsProjectParentProjectId -> ModelsProject { modelsProjectParentProjectId, ..} ) <$> f modelsProjectParentProjectId
{-# INLINE modelsProjectParentProjectIdL #-}

-- | 'modelsProjectPosition' Lens
modelsProjectPositionL :: Lens_' ModelsProject (Maybe Double)
modelsProjectPositionL f ModelsProject{..} = (\modelsProjectPosition -> ModelsProject { modelsProjectPosition, ..} ) <$> f modelsProjectPosition
{-# INLINE modelsProjectPositionL #-}

-- | 'modelsProjectSubscription' Lens
modelsProjectSubscriptionL :: Lens_' ModelsProject (Maybe ModelsSubscription)
modelsProjectSubscriptionL f ModelsProject{..} = (\modelsProjectSubscription -> ModelsProject { modelsProjectSubscription, ..} ) <$> f modelsProjectSubscription
{-# INLINE modelsProjectSubscriptionL #-}

-- | 'modelsProjectTitle' Lens
modelsProjectTitleL :: Lens_' ModelsProject (Maybe Text)
modelsProjectTitleL f ModelsProject{..} = (\modelsProjectTitle -> ModelsProject { modelsProjectTitle, ..} ) <$> f modelsProjectTitle
{-# INLINE modelsProjectTitleL #-}

-- | 'modelsProjectUpdated' Lens
modelsProjectUpdatedL :: Lens_' ModelsProject (Maybe Text)
modelsProjectUpdatedL f ModelsProject{..} = (\modelsProjectUpdated -> ModelsProject { modelsProjectUpdated, ..} ) <$> f modelsProjectUpdated
{-# INLINE modelsProjectUpdatedL #-}

-- | 'modelsProjectViews' Lens
modelsProjectViewsL :: Lens_' ModelsProject (Maybe [ModelsProjectView])
modelsProjectViewsL f ModelsProject{..} = (\modelsProjectViews -> ModelsProject { modelsProjectViews, ..} ) <$> f modelsProjectViews
{-# INLINE modelsProjectViewsL #-}



-- * ModelsProjectDuplicate

-- | 'modelsProjectDuplicateDuplicatedProject' Lens
modelsProjectDuplicateDuplicatedProjectL :: Lens_' ModelsProjectDuplicate (Maybe ModelsProject)
modelsProjectDuplicateDuplicatedProjectL f ModelsProjectDuplicate{..} = (\modelsProjectDuplicateDuplicatedProject -> ModelsProjectDuplicate { modelsProjectDuplicateDuplicatedProject, ..} ) <$> f modelsProjectDuplicateDuplicatedProject
{-# INLINE modelsProjectDuplicateDuplicatedProjectL #-}

-- | 'modelsProjectDuplicateParentProjectId' Lens
modelsProjectDuplicateParentProjectIdL :: Lens_' ModelsProjectDuplicate (Maybe Int)
modelsProjectDuplicateParentProjectIdL f ModelsProjectDuplicate{..} = (\modelsProjectDuplicateParentProjectId -> ModelsProjectDuplicate { modelsProjectDuplicateParentProjectId, ..} ) <$> f modelsProjectDuplicateParentProjectId
{-# INLINE modelsProjectDuplicateParentProjectIdL #-}



-- * ModelsProjectUser

-- | 'modelsProjectUserCreated' Lens
modelsProjectUserCreatedL :: Lens_' ModelsProjectUser (Maybe Text)
modelsProjectUserCreatedL f ModelsProjectUser{..} = (\modelsProjectUserCreated -> ModelsProjectUser { modelsProjectUserCreated, ..} ) <$> f modelsProjectUserCreated
{-# INLINE modelsProjectUserCreatedL #-}

-- | 'modelsProjectUserId' Lens
modelsProjectUserIdL :: Lens_' ModelsProjectUser (Maybe Int)
modelsProjectUserIdL f ModelsProjectUser{..} = (\modelsProjectUserId -> ModelsProjectUser { modelsProjectUserId, ..} ) <$> f modelsProjectUserId
{-# INLINE modelsProjectUserIdL #-}

-- | 'modelsProjectUserRight' Lens
modelsProjectUserRightL :: Lens_' ModelsProjectUser (Maybe ModelsRight)
modelsProjectUserRightL f ModelsProjectUser{..} = (\modelsProjectUserRight -> ModelsProjectUser { modelsProjectUserRight, ..} ) <$> f modelsProjectUserRight
{-# INLINE modelsProjectUserRightL #-}

-- | 'modelsProjectUserUpdated' Lens
modelsProjectUserUpdatedL :: Lens_' ModelsProjectUser (Maybe Text)
modelsProjectUserUpdatedL f ModelsProjectUser{..} = (\modelsProjectUserUpdated -> ModelsProjectUser { modelsProjectUserUpdated, ..} ) <$> f modelsProjectUserUpdated
{-# INLINE modelsProjectUserUpdatedL #-}

-- | 'modelsProjectUserUserId' Lens
modelsProjectUserUserIdL :: Lens_' ModelsProjectUser (Maybe Text)
modelsProjectUserUserIdL f ModelsProjectUser{..} = (\modelsProjectUserUserId -> ModelsProjectUser { modelsProjectUserUserId, ..} ) <$> f modelsProjectUserUserId
{-# INLINE modelsProjectUserUserIdL #-}



-- * ModelsProjectView

-- | 'modelsProjectViewBucketConfiguration' Lens
modelsProjectViewBucketConfigurationL :: Lens_' ModelsProjectView (Maybe [ModelsProjectViewBucketConfiguration])
modelsProjectViewBucketConfigurationL f ModelsProjectView{..} = (\modelsProjectViewBucketConfiguration -> ModelsProjectView { modelsProjectViewBucketConfiguration, ..} ) <$> f modelsProjectViewBucketConfiguration
{-# INLINE modelsProjectViewBucketConfigurationL #-}

-- | 'modelsProjectViewBucketConfigurationMode' Lens
modelsProjectViewBucketConfigurationModeL :: Lens_' ModelsProjectView (Maybe ModelsBucketConfigurationModeKind)
modelsProjectViewBucketConfigurationModeL f ModelsProjectView{..} = (\modelsProjectViewBucketConfigurationMode -> ModelsProjectView { modelsProjectViewBucketConfigurationMode, ..} ) <$> f modelsProjectViewBucketConfigurationMode
{-# INLINE modelsProjectViewBucketConfigurationModeL #-}

-- | 'modelsProjectViewCreated' Lens
modelsProjectViewCreatedL :: Lens_' ModelsProjectView (Maybe Text)
modelsProjectViewCreatedL f ModelsProjectView{..} = (\modelsProjectViewCreated -> ModelsProjectView { modelsProjectViewCreated, ..} ) <$> f modelsProjectViewCreated
{-# INLINE modelsProjectViewCreatedL #-}

-- | 'modelsProjectViewDefaultBucketId' Lens
modelsProjectViewDefaultBucketIdL :: Lens_' ModelsProjectView (Maybe Int)
modelsProjectViewDefaultBucketIdL f ModelsProjectView{..} = (\modelsProjectViewDefaultBucketId -> ModelsProjectView { modelsProjectViewDefaultBucketId, ..} ) <$> f modelsProjectViewDefaultBucketId
{-# INLINE modelsProjectViewDefaultBucketIdL #-}

-- | 'modelsProjectViewDoneBucketId' Lens
modelsProjectViewDoneBucketIdL :: Lens_' ModelsProjectView (Maybe Int)
modelsProjectViewDoneBucketIdL f ModelsProjectView{..} = (\modelsProjectViewDoneBucketId -> ModelsProjectView { modelsProjectViewDoneBucketId, ..} ) <$> f modelsProjectViewDoneBucketId
{-# INLINE modelsProjectViewDoneBucketIdL #-}

-- | 'modelsProjectViewFilter' Lens
modelsProjectViewFilterL :: Lens_' ModelsProjectView (Maybe Text)
modelsProjectViewFilterL f ModelsProjectView{..} = (\modelsProjectViewFilter -> ModelsProjectView { modelsProjectViewFilter, ..} ) <$> f modelsProjectViewFilter
{-# INLINE modelsProjectViewFilterL #-}

-- | 'modelsProjectViewId' Lens
modelsProjectViewIdL :: Lens_' ModelsProjectView (Maybe Int)
modelsProjectViewIdL f ModelsProjectView{..} = (\modelsProjectViewId -> ModelsProjectView { modelsProjectViewId, ..} ) <$> f modelsProjectViewId
{-# INLINE modelsProjectViewIdL #-}

-- | 'modelsProjectViewPosition' Lens
modelsProjectViewPositionL :: Lens_' ModelsProjectView (Maybe Double)
modelsProjectViewPositionL f ModelsProjectView{..} = (\modelsProjectViewPosition -> ModelsProjectView { modelsProjectViewPosition, ..} ) <$> f modelsProjectViewPosition
{-# INLINE modelsProjectViewPositionL #-}

-- | 'modelsProjectViewProjectId' Lens
modelsProjectViewProjectIdL :: Lens_' ModelsProjectView (Maybe Int)
modelsProjectViewProjectIdL f ModelsProjectView{..} = (\modelsProjectViewProjectId -> ModelsProjectView { modelsProjectViewProjectId, ..} ) <$> f modelsProjectViewProjectId
{-# INLINE modelsProjectViewProjectIdL #-}

-- | 'modelsProjectViewTitle' Lens
modelsProjectViewTitleL :: Lens_' ModelsProjectView (Maybe Text)
modelsProjectViewTitleL f ModelsProjectView{..} = (\modelsProjectViewTitle -> ModelsProjectView { modelsProjectViewTitle, ..} ) <$> f modelsProjectViewTitle
{-# INLINE modelsProjectViewTitleL #-}

-- | 'modelsProjectViewUpdated' Lens
modelsProjectViewUpdatedL :: Lens_' ModelsProjectView (Maybe Text)
modelsProjectViewUpdatedL f ModelsProjectView{..} = (\modelsProjectViewUpdated -> ModelsProjectView { modelsProjectViewUpdated, ..} ) <$> f modelsProjectViewUpdated
{-# INLINE modelsProjectViewUpdatedL #-}

-- | 'modelsProjectViewViewKind' Lens
modelsProjectViewViewKindL :: Lens_' ModelsProjectView (Maybe ModelsProjectViewKind)
modelsProjectViewViewKindL f ModelsProjectView{..} = (\modelsProjectViewViewKind -> ModelsProjectView { modelsProjectViewViewKind, ..} ) <$> f modelsProjectViewViewKind
{-# INLINE modelsProjectViewViewKindL #-}



-- * ModelsProjectViewBucketConfiguration

-- | 'modelsProjectViewBucketConfigurationFilter' Lens
modelsProjectViewBucketConfigurationFilterL :: Lens_' ModelsProjectViewBucketConfiguration (Maybe Text)
modelsProjectViewBucketConfigurationFilterL f ModelsProjectViewBucketConfiguration{..} = (\modelsProjectViewBucketConfigurationFilter -> ModelsProjectViewBucketConfiguration { modelsProjectViewBucketConfigurationFilter, ..} ) <$> f modelsProjectViewBucketConfigurationFilter
{-# INLINE modelsProjectViewBucketConfigurationFilterL #-}

-- | 'modelsProjectViewBucketConfigurationTitle' Lens
modelsProjectViewBucketConfigurationTitleL :: Lens_' ModelsProjectViewBucketConfiguration (Maybe Text)
modelsProjectViewBucketConfigurationTitleL f ModelsProjectViewBucketConfiguration{..} = (\modelsProjectViewBucketConfigurationTitle -> ModelsProjectViewBucketConfiguration { modelsProjectViewBucketConfigurationTitle, ..} ) <$> f modelsProjectViewBucketConfigurationTitle
{-# INLINE modelsProjectViewBucketConfigurationTitleL #-}



-- * ModelsProjectViewKind



-- * ModelsReaction

-- | 'modelsReactionCreated' Lens
modelsReactionCreatedL :: Lens_' ModelsReaction (Maybe Text)
modelsReactionCreatedL f ModelsReaction{..} = (\modelsReactionCreated -> ModelsReaction { modelsReactionCreated, ..} ) <$> f modelsReactionCreated
{-# INLINE modelsReactionCreatedL #-}

-- | 'modelsReactionUser' Lens
modelsReactionUserL :: Lens_' ModelsReaction (Maybe UserUser)
modelsReactionUserL f ModelsReaction{..} = (\modelsReactionUser -> ModelsReaction { modelsReactionUser, ..} ) <$> f modelsReactionUser
{-# INLINE modelsReactionUserL #-}

-- | 'modelsReactionValue' Lens
modelsReactionValueL :: Lens_' ModelsReaction (Maybe Text)
modelsReactionValueL f ModelsReaction{..} = (\modelsReactionValue -> ModelsReaction { modelsReactionValue, ..} ) <$> f modelsReactionValue
{-# INLINE modelsReactionValueL #-}



-- * ModelsRelationKind



-- * ModelsReminderRelation



-- * ModelsRight



-- * ModelsRouteDetail

-- | 'modelsRouteDetailMethod' Lens
modelsRouteDetailMethodL :: Lens_' ModelsRouteDetail (Maybe Text)
modelsRouteDetailMethodL f ModelsRouteDetail{..} = (\modelsRouteDetailMethod -> ModelsRouteDetail { modelsRouteDetailMethod, ..} ) <$> f modelsRouteDetailMethod
{-# INLINE modelsRouteDetailMethodL #-}

-- | 'modelsRouteDetailPath' Lens
modelsRouteDetailPathL :: Lens_' ModelsRouteDetail (Maybe Text)
modelsRouteDetailPathL f ModelsRouteDetail{..} = (\modelsRouteDetailPath -> ModelsRouteDetail { modelsRouteDetailPath, ..} ) <$> f modelsRouteDetailPath
{-# INLINE modelsRouteDetailPathL #-}



-- * ModelsSavedFilter

-- | 'modelsSavedFilterCreated' Lens
modelsSavedFilterCreatedL :: Lens_' ModelsSavedFilter (Maybe Text)
modelsSavedFilterCreatedL f ModelsSavedFilter{..} = (\modelsSavedFilterCreated -> ModelsSavedFilter { modelsSavedFilterCreated, ..} ) <$> f modelsSavedFilterCreated
{-# INLINE modelsSavedFilterCreatedL #-}

-- | 'modelsSavedFilterDescription' Lens
modelsSavedFilterDescriptionL :: Lens_' ModelsSavedFilter (Maybe Text)
modelsSavedFilterDescriptionL f ModelsSavedFilter{..} = (\modelsSavedFilterDescription -> ModelsSavedFilter { modelsSavedFilterDescription, ..} ) <$> f modelsSavedFilterDescription
{-# INLINE modelsSavedFilterDescriptionL #-}

-- | 'modelsSavedFilterFilters' Lens
modelsSavedFilterFiltersL :: Lens_' ModelsSavedFilter (Maybe ModelsTaskCollection)
modelsSavedFilterFiltersL f ModelsSavedFilter{..} = (\modelsSavedFilterFilters -> ModelsSavedFilter { modelsSavedFilterFilters, ..} ) <$> f modelsSavedFilterFilters
{-# INLINE modelsSavedFilterFiltersL #-}

-- | 'modelsSavedFilterId' Lens
modelsSavedFilterIdL :: Lens_' ModelsSavedFilter (Maybe Int)
modelsSavedFilterIdL f ModelsSavedFilter{..} = (\modelsSavedFilterId -> ModelsSavedFilter { modelsSavedFilterId, ..} ) <$> f modelsSavedFilterId
{-# INLINE modelsSavedFilterIdL #-}

-- | 'modelsSavedFilterIsFavorite' Lens
modelsSavedFilterIsFavoriteL :: Lens_' ModelsSavedFilter (Maybe Bool)
modelsSavedFilterIsFavoriteL f ModelsSavedFilter{..} = (\modelsSavedFilterIsFavorite -> ModelsSavedFilter { modelsSavedFilterIsFavorite, ..} ) <$> f modelsSavedFilterIsFavorite
{-# INLINE modelsSavedFilterIsFavoriteL #-}

-- | 'modelsSavedFilterOwner' Lens
modelsSavedFilterOwnerL :: Lens_' ModelsSavedFilter (Maybe UserUser)
modelsSavedFilterOwnerL f ModelsSavedFilter{..} = (\modelsSavedFilterOwner -> ModelsSavedFilter { modelsSavedFilterOwner, ..} ) <$> f modelsSavedFilterOwner
{-# INLINE modelsSavedFilterOwnerL #-}

-- | 'modelsSavedFilterTitle' Lens
modelsSavedFilterTitleL :: Lens_' ModelsSavedFilter (Maybe Text)
modelsSavedFilterTitleL f ModelsSavedFilter{..} = (\modelsSavedFilterTitle -> ModelsSavedFilter { modelsSavedFilterTitle, ..} ) <$> f modelsSavedFilterTitle
{-# INLINE modelsSavedFilterTitleL #-}

-- | 'modelsSavedFilterUpdated' Lens
modelsSavedFilterUpdatedL :: Lens_' ModelsSavedFilter (Maybe Text)
modelsSavedFilterUpdatedL f ModelsSavedFilter{..} = (\modelsSavedFilterUpdated -> ModelsSavedFilter { modelsSavedFilterUpdated, ..} ) <$> f modelsSavedFilterUpdated
{-# INLINE modelsSavedFilterUpdatedL #-}



-- * ModelsSharingType



-- * ModelsSubscription

-- | 'modelsSubscriptionCreated' Lens
modelsSubscriptionCreatedL :: Lens_' ModelsSubscription (Maybe Text)
modelsSubscriptionCreatedL f ModelsSubscription{..} = (\modelsSubscriptionCreated -> ModelsSubscription { modelsSubscriptionCreated, ..} ) <$> f modelsSubscriptionCreated
{-# INLINE modelsSubscriptionCreatedL #-}

-- | 'modelsSubscriptionEntity' Lens
modelsSubscriptionEntityL :: Lens_' ModelsSubscription (Maybe Int)
modelsSubscriptionEntityL f ModelsSubscription{..} = (\modelsSubscriptionEntity -> ModelsSubscription { modelsSubscriptionEntity, ..} ) <$> f modelsSubscriptionEntity
{-# INLINE modelsSubscriptionEntityL #-}

-- | 'modelsSubscriptionEntityId' Lens
modelsSubscriptionEntityIdL :: Lens_' ModelsSubscription (Maybe Int)
modelsSubscriptionEntityIdL f ModelsSubscription{..} = (\modelsSubscriptionEntityId -> ModelsSubscription { modelsSubscriptionEntityId, ..} ) <$> f modelsSubscriptionEntityId
{-# INLINE modelsSubscriptionEntityIdL #-}

-- | 'modelsSubscriptionId' Lens
modelsSubscriptionIdL :: Lens_' ModelsSubscription (Maybe Int)
modelsSubscriptionIdL f ModelsSubscription{..} = (\modelsSubscriptionId -> ModelsSubscription { modelsSubscriptionId, ..} ) <$> f modelsSubscriptionId
{-# INLINE modelsSubscriptionIdL #-}



-- * ModelsTask

-- | 'modelsTaskAssignees' Lens
modelsTaskAssigneesL :: Lens_' ModelsTask (Maybe [UserUser])
modelsTaskAssigneesL f ModelsTask{..} = (\modelsTaskAssignees -> ModelsTask { modelsTaskAssignees, ..} ) <$> f modelsTaskAssignees
{-# INLINE modelsTaskAssigneesL #-}

-- | 'modelsTaskAttachments' Lens
modelsTaskAttachmentsL :: Lens_' ModelsTask (Maybe [ModelsTaskAttachment])
modelsTaskAttachmentsL f ModelsTask{..} = (\modelsTaskAttachments -> ModelsTask { modelsTaskAttachments, ..} ) <$> f modelsTaskAttachments
{-# INLINE modelsTaskAttachmentsL #-}

-- | 'modelsTaskBucketId' Lens
modelsTaskBucketIdL :: Lens_' ModelsTask (Maybe Int)
modelsTaskBucketIdL f ModelsTask{..} = (\modelsTaskBucketId -> ModelsTask { modelsTaskBucketId, ..} ) <$> f modelsTaskBucketId
{-# INLINE modelsTaskBucketIdL #-}

-- | 'modelsTaskCoverImageAttachmentId' Lens
modelsTaskCoverImageAttachmentIdL :: Lens_' ModelsTask (Maybe Int)
modelsTaskCoverImageAttachmentIdL f ModelsTask{..} = (\modelsTaskCoverImageAttachmentId -> ModelsTask { modelsTaskCoverImageAttachmentId, ..} ) <$> f modelsTaskCoverImageAttachmentId
{-# INLINE modelsTaskCoverImageAttachmentIdL #-}

-- | 'modelsTaskCreated' Lens
modelsTaskCreatedL :: Lens_' ModelsTask (Maybe Text)
modelsTaskCreatedL f ModelsTask{..} = (\modelsTaskCreated -> ModelsTask { modelsTaskCreated, ..} ) <$> f modelsTaskCreated
{-# INLINE modelsTaskCreatedL #-}

-- | 'modelsTaskCreatedBy' Lens
modelsTaskCreatedByL :: Lens_' ModelsTask (Maybe UserUser)
modelsTaskCreatedByL f ModelsTask{..} = (\modelsTaskCreatedBy -> ModelsTask { modelsTaskCreatedBy, ..} ) <$> f modelsTaskCreatedBy
{-# INLINE modelsTaskCreatedByL #-}

-- | 'modelsTaskDescription' Lens
modelsTaskDescriptionL :: Lens_' ModelsTask (Maybe Text)
modelsTaskDescriptionL f ModelsTask{..} = (\modelsTaskDescription -> ModelsTask { modelsTaskDescription, ..} ) <$> f modelsTaskDescription
{-# INLINE modelsTaskDescriptionL #-}

-- | 'modelsTaskDone' Lens
modelsTaskDoneL :: Lens_' ModelsTask (Maybe Bool)
modelsTaskDoneL f ModelsTask{..} = (\modelsTaskDone -> ModelsTask { modelsTaskDone, ..} ) <$> f modelsTaskDone
{-# INLINE modelsTaskDoneL #-}

-- | 'modelsTaskDoneAt' Lens
modelsTaskDoneAtL :: Lens_' ModelsTask (Maybe Text)
modelsTaskDoneAtL f ModelsTask{..} = (\modelsTaskDoneAt -> ModelsTask { modelsTaskDoneAt, ..} ) <$> f modelsTaskDoneAt
{-# INLINE modelsTaskDoneAtL #-}

-- | 'modelsTaskDueDate' Lens
modelsTaskDueDateL :: Lens_' ModelsTask (Maybe Text)
modelsTaskDueDateL f ModelsTask{..} = (\modelsTaskDueDate -> ModelsTask { modelsTaskDueDate, ..} ) <$> f modelsTaskDueDate
{-# INLINE modelsTaskDueDateL #-}

-- | 'modelsTaskEndDate' Lens
modelsTaskEndDateL :: Lens_' ModelsTask (Maybe Text)
modelsTaskEndDateL f ModelsTask{..} = (\modelsTaskEndDate -> ModelsTask { modelsTaskEndDate, ..} ) <$> f modelsTaskEndDate
{-# INLINE modelsTaskEndDateL #-}

-- | 'modelsTaskHexColor' Lens
modelsTaskHexColorL :: Lens_' ModelsTask (Maybe Text)
modelsTaskHexColorL f ModelsTask{..} = (\modelsTaskHexColor -> ModelsTask { modelsTaskHexColor, ..} ) <$> f modelsTaskHexColor
{-# INLINE modelsTaskHexColorL #-}

-- | 'modelsTaskId' Lens
modelsTaskIdL :: Lens_' ModelsTask (Maybe Int)
modelsTaskIdL f ModelsTask{..} = (\modelsTaskId -> ModelsTask { modelsTaskId, ..} ) <$> f modelsTaskId
{-# INLINE modelsTaskIdL #-}

-- | 'modelsTaskIdentifier' Lens
modelsTaskIdentifierL :: Lens_' ModelsTask (Maybe Text)
modelsTaskIdentifierL f ModelsTask{..} = (\modelsTaskIdentifier -> ModelsTask { modelsTaskIdentifier, ..} ) <$> f modelsTaskIdentifier
{-# INLINE modelsTaskIdentifierL #-}

-- | 'modelsTaskIndex' Lens
modelsTaskIndexL :: Lens_' ModelsTask (Maybe Int)
modelsTaskIndexL f ModelsTask{..} = (\modelsTaskIndex -> ModelsTask { modelsTaskIndex, ..} ) <$> f modelsTaskIndex
{-# INLINE modelsTaskIndexL #-}

-- | 'modelsTaskIsFavorite' Lens
modelsTaskIsFavoriteL :: Lens_' ModelsTask (Maybe Bool)
modelsTaskIsFavoriteL f ModelsTask{..} = (\modelsTaskIsFavorite -> ModelsTask { modelsTaskIsFavorite, ..} ) <$> f modelsTaskIsFavorite
{-# INLINE modelsTaskIsFavoriteL #-}

-- | 'modelsTaskLabels' Lens
modelsTaskLabelsL :: Lens_' ModelsTask (Maybe [ModelsLabel])
modelsTaskLabelsL f ModelsTask{..} = (\modelsTaskLabels -> ModelsTask { modelsTaskLabels, ..} ) <$> f modelsTaskLabels
{-# INLINE modelsTaskLabelsL #-}

-- | 'modelsTaskPercentDone' Lens
modelsTaskPercentDoneL :: Lens_' ModelsTask (Maybe Double)
modelsTaskPercentDoneL f ModelsTask{..} = (\modelsTaskPercentDone -> ModelsTask { modelsTaskPercentDone, ..} ) <$> f modelsTaskPercentDone
{-# INLINE modelsTaskPercentDoneL #-}

-- | 'modelsTaskPosition' Lens
modelsTaskPositionL :: Lens_' ModelsTask (Maybe Double)
modelsTaskPositionL f ModelsTask{..} = (\modelsTaskPosition -> ModelsTask { modelsTaskPosition, ..} ) <$> f modelsTaskPosition
{-# INLINE modelsTaskPositionL #-}

-- | 'modelsTaskPriority' Lens
modelsTaskPriorityL :: Lens_' ModelsTask (Maybe Int)
modelsTaskPriorityL f ModelsTask{..} = (\modelsTaskPriority -> ModelsTask { modelsTaskPriority, ..} ) <$> f modelsTaskPriority
{-# INLINE modelsTaskPriorityL #-}

-- | 'modelsTaskProjectId' Lens
modelsTaskProjectIdL :: Lens_' ModelsTask (Maybe Int)
modelsTaskProjectIdL f ModelsTask{..} = (\modelsTaskProjectId -> ModelsTask { modelsTaskProjectId, ..} ) <$> f modelsTaskProjectId
{-# INLINE modelsTaskProjectIdL #-}

-- | 'modelsTaskReactions' Lens
modelsTaskReactionsL :: Lens_' ModelsTask (Maybe (Map.Map String [UserUser]))
modelsTaskReactionsL f ModelsTask{..} = (\modelsTaskReactions -> ModelsTask { modelsTaskReactions, ..} ) <$> f modelsTaskReactions
{-# INLINE modelsTaskReactionsL #-}

-- | 'modelsTaskRelatedTasks' Lens
modelsTaskRelatedTasksL :: Lens_' ModelsTask (Maybe (Map.Map String [ModelsTask]))
modelsTaskRelatedTasksL f ModelsTask{..} = (\modelsTaskRelatedTasks -> ModelsTask { modelsTaskRelatedTasks, ..} ) <$> f modelsTaskRelatedTasks
{-# INLINE modelsTaskRelatedTasksL #-}

-- | 'modelsTaskReminders' Lens
modelsTaskRemindersL :: Lens_' ModelsTask (Maybe [ModelsTaskReminder])
modelsTaskRemindersL f ModelsTask{..} = (\modelsTaskReminders -> ModelsTask { modelsTaskReminders, ..} ) <$> f modelsTaskReminders
{-# INLINE modelsTaskRemindersL #-}

-- | 'modelsTaskRepeatAfter' Lens
modelsTaskRepeatAfterL :: Lens_' ModelsTask (Maybe Int)
modelsTaskRepeatAfterL f ModelsTask{..} = (\modelsTaskRepeatAfter -> ModelsTask { modelsTaskRepeatAfter, ..} ) <$> f modelsTaskRepeatAfter
{-# INLINE modelsTaskRepeatAfterL #-}

-- | 'modelsTaskRepeatMode' Lens
modelsTaskRepeatModeL :: Lens_' ModelsTask (Maybe ModelsTaskRepeatMode)
modelsTaskRepeatModeL f ModelsTask{..} = (\modelsTaskRepeatMode -> ModelsTask { modelsTaskRepeatMode, ..} ) <$> f modelsTaskRepeatMode
{-# INLINE modelsTaskRepeatModeL #-}

-- | 'modelsTaskStartDate' Lens
modelsTaskStartDateL :: Lens_' ModelsTask (Maybe Text)
modelsTaskStartDateL f ModelsTask{..} = (\modelsTaskStartDate -> ModelsTask { modelsTaskStartDate, ..} ) <$> f modelsTaskStartDate
{-# INLINE modelsTaskStartDateL #-}

-- | 'modelsTaskSubscription' Lens
modelsTaskSubscriptionL :: Lens_' ModelsTask (Maybe ModelsSubscription)
modelsTaskSubscriptionL f ModelsTask{..} = (\modelsTaskSubscription -> ModelsTask { modelsTaskSubscription, ..} ) <$> f modelsTaskSubscription
{-# INLINE modelsTaskSubscriptionL #-}

-- | 'modelsTaskTitle' Lens
modelsTaskTitleL :: Lens_' ModelsTask (Maybe Text)
modelsTaskTitleL f ModelsTask{..} = (\modelsTaskTitle -> ModelsTask { modelsTaskTitle, ..} ) <$> f modelsTaskTitle
{-# INLINE modelsTaskTitleL #-}

-- | 'modelsTaskUpdated' Lens
modelsTaskUpdatedL :: Lens_' ModelsTask (Maybe Text)
modelsTaskUpdatedL f ModelsTask{..} = (\modelsTaskUpdated -> ModelsTask { modelsTaskUpdated, ..} ) <$> f modelsTaskUpdated
{-# INLINE modelsTaskUpdatedL #-}



-- * ModelsTaskAssginee

-- | 'modelsTaskAssgineeCreated' Lens
modelsTaskAssgineeCreatedL :: Lens_' ModelsTaskAssginee (Maybe Text)
modelsTaskAssgineeCreatedL f ModelsTaskAssginee{..} = (\modelsTaskAssgineeCreated -> ModelsTaskAssginee { modelsTaskAssgineeCreated, ..} ) <$> f modelsTaskAssgineeCreated
{-# INLINE modelsTaskAssgineeCreatedL #-}

-- | 'modelsTaskAssgineeUserId' Lens
modelsTaskAssgineeUserIdL :: Lens_' ModelsTaskAssginee (Maybe Int)
modelsTaskAssgineeUserIdL f ModelsTaskAssginee{..} = (\modelsTaskAssgineeUserId -> ModelsTaskAssginee { modelsTaskAssgineeUserId, ..} ) <$> f modelsTaskAssgineeUserId
{-# INLINE modelsTaskAssgineeUserIdL #-}



-- * ModelsTaskAttachment

-- | 'modelsTaskAttachmentCreated' Lens
modelsTaskAttachmentCreatedL :: Lens_' ModelsTaskAttachment (Maybe Text)
modelsTaskAttachmentCreatedL f ModelsTaskAttachment{..} = (\modelsTaskAttachmentCreated -> ModelsTaskAttachment { modelsTaskAttachmentCreated, ..} ) <$> f modelsTaskAttachmentCreated
{-# INLINE modelsTaskAttachmentCreatedL #-}

-- | 'modelsTaskAttachmentCreatedBy' Lens
modelsTaskAttachmentCreatedByL :: Lens_' ModelsTaskAttachment (Maybe UserUser)
modelsTaskAttachmentCreatedByL f ModelsTaskAttachment{..} = (\modelsTaskAttachmentCreatedBy -> ModelsTaskAttachment { modelsTaskAttachmentCreatedBy, ..} ) <$> f modelsTaskAttachmentCreatedBy
{-# INLINE modelsTaskAttachmentCreatedByL #-}

-- | 'modelsTaskAttachmentFile' Lens
modelsTaskAttachmentFileL :: Lens_' ModelsTaskAttachment (Maybe FilesFile)
modelsTaskAttachmentFileL f ModelsTaskAttachment{..} = (\modelsTaskAttachmentFile -> ModelsTaskAttachment { modelsTaskAttachmentFile, ..} ) <$> f modelsTaskAttachmentFile
{-# INLINE modelsTaskAttachmentFileL #-}

-- | 'modelsTaskAttachmentId' Lens
modelsTaskAttachmentIdL :: Lens_' ModelsTaskAttachment (Maybe Int)
modelsTaskAttachmentIdL f ModelsTaskAttachment{..} = (\modelsTaskAttachmentId -> ModelsTaskAttachment { modelsTaskAttachmentId, ..} ) <$> f modelsTaskAttachmentId
{-# INLINE modelsTaskAttachmentIdL #-}

-- | 'modelsTaskAttachmentTaskId' Lens
modelsTaskAttachmentTaskIdL :: Lens_' ModelsTaskAttachment (Maybe Int)
modelsTaskAttachmentTaskIdL f ModelsTaskAttachment{..} = (\modelsTaskAttachmentTaskId -> ModelsTaskAttachment { modelsTaskAttachmentTaskId, ..} ) <$> f modelsTaskAttachmentTaskId
{-# INLINE modelsTaskAttachmentTaskIdL #-}



-- * ModelsTaskBucket

-- | 'modelsTaskBucketBucketId' Lens
modelsTaskBucketBucketIdL :: Lens_' ModelsTaskBucket (Maybe Int)
modelsTaskBucketBucketIdL f ModelsTaskBucket{..} = (\modelsTaskBucketBucketId -> ModelsTaskBucket { modelsTaskBucketBucketId, ..} ) <$> f modelsTaskBucketBucketId
{-# INLINE modelsTaskBucketBucketIdL #-}

-- | 'modelsTaskBucketProjectViewId' Lens
modelsTaskBucketProjectViewIdL :: Lens_' ModelsTaskBucket (Maybe Int)
modelsTaskBucketProjectViewIdL f ModelsTaskBucket{..} = (\modelsTaskBucketProjectViewId -> ModelsTaskBucket { modelsTaskBucketProjectViewId, ..} ) <$> f modelsTaskBucketProjectViewId
{-# INLINE modelsTaskBucketProjectViewIdL #-}

-- | 'modelsTaskBucketTaskDone' Lens
modelsTaskBucketTaskDoneL :: Lens_' ModelsTaskBucket (Maybe Bool)
modelsTaskBucketTaskDoneL f ModelsTaskBucket{..} = (\modelsTaskBucketTaskDone -> ModelsTaskBucket { modelsTaskBucketTaskDone, ..} ) <$> f modelsTaskBucketTaskDone
{-# INLINE modelsTaskBucketTaskDoneL #-}

-- | 'modelsTaskBucketTaskId' Lens
modelsTaskBucketTaskIdL :: Lens_' ModelsTaskBucket (Maybe Int)
modelsTaskBucketTaskIdL f ModelsTaskBucket{..} = (\modelsTaskBucketTaskId -> ModelsTaskBucket { modelsTaskBucketTaskId, ..} ) <$> f modelsTaskBucketTaskId
{-# INLINE modelsTaskBucketTaskIdL #-}



-- * ModelsTaskCollection

-- | 'modelsTaskCollectionFilter' Lens
modelsTaskCollectionFilterL :: Lens_' ModelsTaskCollection (Maybe Text)
modelsTaskCollectionFilterL f ModelsTaskCollection{..} = (\modelsTaskCollectionFilter -> ModelsTaskCollection { modelsTaskCollectionFilter, ..} ) <$> f modelsTaskCollectionFilter
{-# INLINE modelsTaskCollectionFilterL #-}

-- | 'modelsTaskCollectionFilterIncludeNulls' Lens
modelsTaskCollectionFilterIncludeNullsL :: Lens_' ModelsTaskCollection (Maybe Bool)
modelsTaskCollectionFilterIncludeNullsL f ModelsTaskCollection{..} = (\modelsTaskCollectionFilterIncludeNulls -> ModelsTaskCollection { modelsTaskCollectionFilterIncludeNulls, ..} ) <$> f modelsTaskCollectionFilterIncludeNulls
{-# INLINE modelsTaskCollectionFilterIncludeNullsL #-}

-- | 'modelsTaskCollectionOrderBy' Lens
modelsTaskCollectionOrderByL :: Lens_' ModelsTaskCollection (Maybe [Text])
modelsTaskCollectionOrderByL f ModelsTaskCollection{..} = (\modelsTaskCollectionOrderBy -> ModelsTaskCollection { modelsTaskCollectionOrderBy, ..} ) <$> f modelsTaskCollectionOrderBy
{-# INLINE modelsTaskCollectionOrderByL #-}

-- | 'modelsTaskCollectionSortBy' Lens
modelsTaskCollectionSortByL :: Lens_' ModelsTaskCollection (Maybe [Text])
modelsTaskCollectionSortByL f ModelsTaskCollection{..} = (\modelsTaskCollectionSortBy -> ModelsTaskCollection { modelsTaskCollectionSortBy, ..} ) <$> f modelsTaskCollectionSortBy
{-# INLINE modelsTaskCollectionSortByL #-}



-- * ModelsTaskComment

-- | 'modelsTaskCommentAuthor' Lens
modelsTaskCommentAuthorL :: Lens_' ModelsTaskComment (Maybe UserUser)
modelsTaskCommentAuthorL f ModelsTaskComment{..} = (\modelsTaskCommentAuthor -> ModelsTaskComment { modelsTaskCommentAuthor, ..} ) <$> f modelsTaskCommentAuthor
{-# INLINE modelsTaskCommentAuthorL #-}

-- | 'modelsTaskCommentComment' Lens
modelsTaskCommentCommentL :: Lens_' ModelsTaskComment (Maybe Text)
modelsTaskCommentCommentL f ModelsTaskComment{..} = (\modelsTaskCommentComment -> ModelsTaskComment { modelsTaskCommentComment, ..} ) <$> f modelsTaskCommentComment
{-# INLINE modelsTaskCommentCommentL #-}

-- | 'modelsTaskCommentCreated' Lens
modelsTaskCommentCreatedL :: Lens_' ModelsTaskComment (Maybe Text)
modelsTaskCommentCreatedL f ModelsTaskComment{..} = (\modelsTaskCommentCreated -> ModelsTaskComment { modelsTaskCommentCreated, ..} ) <$> f modelsTaskCommentCreated
{-# INLINE modelsTaskCommentCreatedL #-}

-- | 'modelsTaskCommentId' Lens
modelsTaskCommentIdL :: Lens_' ModelsTaskComment (Maybe Int)
modelsTaskCommentIdL f ModelsTaskComment{..} = (\modelsTaskCommentId -> ModelsTaskComment { modelsTaskCommentId, ..} ) <$> f modelsTaskCommentId
{-# INLINE modelsTaskCommentIdL #-}

-- | 'modelsTaskCommentReactions' Lens
modelsTaskCommentReactionsL :: Lens_' ModelsTaskComment (Maybe (Map.Map String [UserUser]))
modelsTaskCommentReactionsL f ModelsTaskComment{..} = (\modelsTaskCommentReactions -> ModelsTaskComment { modelsTaskCommentReactions, ..} ) <$> f modelsTaskCommentReactions
{-# INLINE modelsTaskCommentReactionsL #-}

-- | 'modelsTaskCommentUpdated' Lens
modelsTaskCommentUpdatedL :: Lens_' ModelsTaskComment (Maybe Text)
modelsTaskCommentUpdatedL f ModelsTaskComment{..} = (\modelsTaskCommentUpdated -> ModelsTaskComment { modelsTaskCommentUpdated, ..} ) <$> f modelsTaskCommentUpdated
{-# INLINE modelsTaskCommentUpdatedL #-}



-- * ModelsTaskPosition

-- | 'modelsTaskPositionPosition' Lens
modelsTaskPositionPositionL :: Lens_' ModelsTaskPosition (Maybe Double)
modelsTaskPositionPositionL f ModelsTaskPosition{..} = (\modelsTaskPositionPosition -> ModelsTaskPosition { modelsTaskPositionPosition, ..} ) <$> f modelsTaskPositionPosition
{-# INLINE modelsTaskPositionPositionL #-}

-- | 'modelsTaskPositionProjectViewId' Lens
modelsTaskPositionProjectViewIdL :: Lens_' ModelsTaskPosition (Maybe Int)
modelsTaskPositionProjectViewIdL f ModelsTaskPosition{..} = (\modelsTaskPositionProjectViewId -> ModelsTaskPosition { modelsTaskPositionProjectViewId, ..} ) <$> f modelsTaskPositionProjectViewId
{-# INLINE modelsTaskPositionProjectViewIdL #-}

-- | 'modelsTaskPositionTaskId' Lens
modelsTaskPositionTaskIdL :: Lens_' ModelsTaskPosition (Maybe Int)
modelsTaskPositionTaskIdL f ModelsTaskPosition{..} = (\modelsTaskPositionTaskId -> ModelsTaskPosition { modelsTaskPositionTaskId, ..} ) <$> f modelsTaskPositionTaskId
{-# INLINE modelsTaskPositionTaskIdL #-}



-- * ModelsTaskRelation

-- | 'modelsTaskRelationCreated' Lens
modelsTaskRelationCreatedL :: Lens_' ModelsTaskRelation (Maybe Text)
modelsTaskRelationCreatedL f ModelsTaskRelation{..} = (\modelsTaskRelationCreated -> ModelsTaskRelation { modelsTaskRelationCreated, ..} ) <$> f modelsTaskRelationCreated
{-# INLINE modelsTaskRelationCreatedL #-}

-- | 'modelsTaskRelationCreatedBy' Lens
modelsTaskRelationCreatedByL :: Lens_' ModelsTaskRelation (Maybe UserUser)
modelsTaskRelationCreatedByL f ModelsTaskRelation{..} = (\modelsTaskRelationCreatedBy -> ModelsTaskRelation { modelsTaskRelationCreatedBy, ..} ) <$> f modelsTaskRelationCreatedBy
{-# INLINE modelsTaskRelationCreatedByL #-}

-- | 'modelsTaskRelationOtherTaskId' Lens
modelsTaskRelationOtherTaskIdL :: Lens_' ModelsTaskRelation (Maybe Int)
modelsTaskRelationOtherTaskIdL f ModelsTaskRelation{..} = (\modelsTaskRelationOtherTaskId -> ModelsTaskRelation { modelsTaskRelationOtherTaskId, ..} ) <$> f modelsTaskRelationOtherTaskId
{-# INLINE modelsTaskRelationOtherTaskIdL #-}

-- | 'modelsTaskRelationRelationKind' Lens
modelsTaskRelationRelationKindL :: Lens_' ModelsTaskRelation (Maybe ModelsRelationKind)
modelsTaskRelationRelationKindL f ModelsTaskRelation{..} = (\modelsTaskRelationRelationKind -> ModelsTaskRelation { modelsTaskRelationRelationKind, ..} ) <$> f modelsTaskRelationRelationKind
{-# INLINE modelsTaskRelationRelationKindL #-}

-- | 'modelsTaskRelationTaskId' Lens
modelsTaskRelationTaskIdL :: Lens_' ModelsTaskRelation (Maybe Int)
modelsTaskRelationTaskIdL f ModelsTaskRelation{..} = (\modelsTaskRelationTaskId -> ModelsTaskRelation { modelsTaskRelationTaskId, ..} ) <$> f modelsTaskRelationTaskId
{-# INLINE modelsTaskRelationTaskIdL #-}



-- * ModelsTaskReminder

-- | 'modelsTaskReminderRelativePeriod' Lens
modelsTaskReminderRelativePeriodL :: Lens_' ModelsTaskReminder (Maybe Int)
modelsTaskReminderRelativePeriodL f ModelsTaskReminder{..} = (\modelsTaskReminderRelativePeriod -> ModelsTaskReminder { modelsTaskReminderRelativePeriod, ..} ) <$> f modelsTaskReminderRelativePeriod
{-# INLINE modelsTaskReminderRelativePeriodL #-}

-- | 'modelsTaskReminderRelativeTo' Lens
modelsTaskReminderRelativeToL :: Lens_' ModelsTaskReminder (Maybe ModelsReminderRelation)
modelsTaskReminderRelativeToL f ModelsTaskReminder{..} = (\modelsTaskReminderRelativeTo -> ModelsTaskReminder { modelsTaskReminderRelativeTo, ..} ) <$> f modelsTaskReminderRelativeTo
{-# INLINE modelsTaskReminderRelativeToL #-}

-- | 'modelsTaskReminderReminder' Lens
modelsTaskReminderReminderL :: Lens_' ModelsTaskReminder (Maybe Text)
modelsTaskReminderReminderL f ModelsTaskReminder{..} = (\modelsTaskReminderReminder -> ModelsTaskReminder { modelsTaskReminderReminder, ..} ) <$> f modelsTaskReminderReminder
{-# INLINE modelsTaskReminderReminderL #-}



-- * ModelsTaskRepeatMode



-- * ModelsTeam

-- | 'modelsTeamCreated' Lens
modelsTeamCreatedL :: Lens_' ModelsTeam (Maybe Text)
modelsTeamCreatedL f ModelsTeam{..} = (\modelsTeamCreated -> ModelsTeam { modelsTeamCreated, ..} ) <$> f modelsTeamCreated
{-# INLINE modelsTeamCreatedL #-}

-- | 'modelsTeamCreatedBy' Lens
modelsTeamCreatedByL :: Lens_' ModelsTeam (Maybe UserUser)
modelsTeamCreatedByL f ModelsTeam{..} = (\modelsTeamCreatedBy -> ModelsTeam { modelsTeamCreatedBy, ..} ) <$> f modelsTeamCreatedBy
{-# INLINE modelsTeamCreatedByL #-}

-- | 'modelsTeamDescription' Lens
modelsTeamDescriptionL :: Lens_' ModelsTeam (Maybe Text)
modelsTeamDescriptionL f ModelsTeam{..} = (\modelsTeamDescription -> ModelsTeam { modelsTeamDescription, ..} ) <$> f modelsTeamDescription
{-# INLINE modelsTeamDescriptionL #-}

-- | 'modelsTeamId' Lens
modelsTeamIdL :: Lens_' ModelsTeam (Maybe Int)
modelsTeamIdL f ModelsTeam{..} = (\modelsTeamId -> ModelsTeam { modelsTeamId, ..} ) <$> f modelsTeamId
{-# INLINE modelsTeamIdL #-}

-- | 'modelsTeamIncludePublic' Lens
modelsTeamIncludePublicL :: Lens_' ModelsTeam (Maybe Bool)
modelsTeamIncludePublicL f ModelsTeam{..} = (\modelsTeamIncludePublic -> ModelsTeam { modelsTeamIncludePublic, ..} ) <$> f modelsTeamIncludePublic
{-# INLINE modelsTeamIncludePublicL #-}

-- | 'modelsTeamIsPublic' Lens
modelsTeamIsPublicL :: Lens_' ModelsTeam (Maybe Bool)
modelsTeamIsPublicL f ModelsTeam{..} = (\modelsTeamIsPublic -> ModelsTeam { modelsTeamIsPublic, ..} ) <$> f modelsTeamIsPublic
{-# INLINE modelsTeamIsPublicL #-}

-- | 'modelsTeamMembers' Lens
modelsTeamMembersL :: Lens_' ModelsTeam (Maybe [ModelsTeamUser])
modelsTeamMembersL f ModelsTeam{..} = (\modelsTeamMembers -> ModelsTeam { modelsTeamMembers, ..} ) <$> f modelsTeamMembers
{-# INLINE modelsTeamMembersL #-}

-- | 'modelsTeamName' Lens
modelsTeamNameL :: Lens_' ModelsTeam (Maybe Text)
modelsTeamNameL f ModelsTeam{..} = (\modelsTeamName -> ModelsTeam { modelsTeamName, ..} ) <$> f modelsTeamName
{-# INLINE modelsTeamNameL #-}

-- | 'modelsTeamOidcId' Lens
modelsTeamOidcIdL :: Lens_' ModelsTeam (Maybe Text)
modelsTeamOidcIdL f ModelsTeam{..} = (\modelsTeamOidcId -> ModelsTeam { modelsTeamOidcId, ..} ) <$> f modelsTeamOidcId
{-# INLINE modelsTeamOidcIdL #-}

-- | 'modelsTeamUpdated' Lens
modelsTeamUpdatedL :: Lens_' ModelsTeam (Maybe Text)
modelsTeamUpdatedL f ModelsTeam{..} = (\modelsTeamUpdated -> ModelsTeam { modelsTeamUpdated, ..} ) <$> f modelsTeamUpdated
{-# INLINE modelsTeamUpdatedL #-}



-- * ModelsTeamMember

-- | 'modelsTeamMemberAdmin' Lens
modelsTeamMemberAdminL :: Lens_' ModelsTeamMember (Maybe Bool)
modelsTeamMemberAdminL f ModelsTeamMember{..} = (\modelsTeamMemberAdmin -> ModelsTeamMember { modelsTeamMemberAdmin, ..} ) <$> f modelsTeamMemberAdmin
{-# INLINE modelsTeamMemberAdminL #-}

-- | 'modelsTeamMemberCreated' Lens
modelsTeamMemberCreatedL :: Lens_' ModelsTeamMember (Maybe Text)
modelsTeamMemberCreatedL f ModelsTeamMember{..} = (\modelsTeamMemberCreated -> ModelsTeamMember { modelsTeamMemberCreated, ..} ) <$> f modelsTeamMemberCreated
{-# INLINE modelsTeamMemberCreatedL #-}

-- | 'modelsTeamMemberId' Lens
modelsTeamMemberIdL :: Lens_' ModelsTeamMember (Maybe Int)
modelsTeamMemberIdL f ModelsTeamMember{..} = (\modelsTeamMemberId -> ModelsTeamMember { modelsTeamMemberId, ..} ) <$> f modelsTeamMemberId
{-# INLINE modelsTeamMemberIdL #-}

-- | 'modelsTeamMemberUsername' Lens
modelsTeamMemberUsernameL :: Lens_' ModelsTeamMember (Maybe Text)
modelsTeamMemberUsernameL f ModelsTeamMember{..} = (\modelsTeamMemberUsername -> ModelsTeamMember { modelsTeamMemberUsername, ..} ) <$> f modelsTeamMemberUsername
{-# INLINE modelsTeamMemberUsernameL #-}



-- * ModelsTeamProject

-- | 'modelsTeamProjectCreated' Lens
modelsTeamProjectCreatedL :: Lens_' ModelsTeamProject (Maybe Text)
modelsTeamProjectCreatedL f ModelsTeamProject{..} = (\modelsTeamProjectCreated -> ModelsTeamProject { modelsTeamProjectCreated, ..} ) <$> f modelsTeamProjectCreated
{-# INLINE modelsTeamProjectCreatedL #-}

-- | 'modelsTeamProjectId' Lens
modelsTeamProjectIdL :: Lens_' ModelsTeamProject (Maybe Int)
modelsTeamProjectIdL f ModelsTeamProject{..} = (\modelsTeamProjectId -> ModelsTeamProject { modelsTeamProjectId, ..} ) <$> f modelsTeamProjectId
{-# INLINE modelsTeamProjectIdL #-}

-- | 'modelsTeamProjectRight' Lens
modelsTeamProjectRightL :: Lens_' ModelsTeamProject (Maybe ModelsRight)
modelsTeamProjectRightL f ModelsTeamProject{..} = (\modelsTeamProjectRight -> ModelsTeamProject { modelsTeamProjectRight, ..} ) <$> f modelsTeamProjectRight
{-# INLINE modelsTeamProjectRightL #-}

-- | 'modelsTeamProjectTeamId' Lens
modelsTeamProjectTeamIdL :: Lens_' ModelsTeamProject (Maybe Int)
modelsTeamProjectTeamIdL f ModelsTeamProject{..} = (\modelsTeamProjectTeamId -> ModelsTeamProject { modelsTeamProjectTeamId, ..} ) <$> f modelsTeamProjectTeamId
{-# INLINE modelsTeamProjectTeamIdL #-}

-- | 'modelsTeamProjectUpdated' Lens
modelsTeamProjectUpdatedL :: Lens_' ModelsTeamProject (Maybe Text)
modelsTeamProjectUpdatedL f ModelsTeamProject{..} = (\modelsTeamProjectUpdated -> ModelsTeamProject { modelsTeamProjectUpdated, ..} ) <$> f modelsTeamProjectUpdated
{-# INLINE modelsTeamProjectUpdatedL #-}



-- * ModelsTeamUser

-- | 'modelsTeamUserAdmin' Lens
modelsTeamUserAdminL :: Lens_' ModelsTeamUser (Maybe Bool)
modelsTeamUserAdminL f ModelsTeamUser{..} = (\modelsTeamUserAdmin -> ModelsTeamUser { modelsTeamUserAdmin, ..} ) <$> f modelsTeamUserAdmin
{-# INLINE modelsTeamUserAdminL #-}

-- | 'modelsTeamUserCreated' Lens
modelsTeamUserCreatedL :: Lens_' ModelsTeamUser (Maybe Text)
modelsTeamUserCreatedL f ModelsTeamUser{..} = (\modelsTeamUserCreated -> ModelsTeamUser { modelsTeamUserCreated, ..} ) <$> f modelsTeamUserCreated
{-# INLINE modelsTeamUserCreatedL #-}

-- | 'modelsTeamUserEmail' Lens
modelsTeamUserEmailL :: Lens_' ModelsTeamUser (Maybe Text)
modelsTeamUserEmailL f ModelsTeamUser{..} = (\modelsTeamUserEmail -> ModelsTeamUser { modelsTeamUserEmail, ..} ) <$> f modelsTeamUserEmail
{-# INLINE modelsTeamUserEmailL #-}

-- | 'modelsTeamUserId' Lens
modelsTeamUserIdL :: Lens_' ModelsTeamUser (Maybe Int)
modelsTeamUserIdL f ModelsTeamUser{..} = (\modelsTeamUserId -> ModelsTeamUser { modelsTeamUserId, ..} ) <$> f modelsTeamUserId
{-# INLINE modelsTeamUserIdL #-}

-- | 'modelsTeamUserName' Lens
modelsTeamUserNameL :: Lens_' ModelsTeamUser (Maybe Text)
modelsTeamUserNameL f ModelsTeamUser{..} = (\modelsTeamUserName -> ModelsTeamUser { modelsTeamUserName, ..} ) <$> f modelsTeamUserName
{-# INLINE modelsTeamUserNameL #-}

-- | 'modelsTeamUserUpdated' Lens
modelsTeamUserUpdatedL :: Lens_' ModelsTeamUser (Maybe Text)
modelsTeamUserUpdatedL f ModelsTeamUser{..} = (\modelsTeamUserUpdated -> ModelsTeamUser { modelsTeamUserUpdated, ..} ) <$> f modelsTeamUserUpdated
{-# INLINE modelsTeamUserUpdatedL #-}

-- | 'modelsTeamUserUsername' Lens
modelsTeamUserUsernameL :: Lens_' ModelsTeamUser (Maybe Text)
modelsTeamUserUsernameL f ModelsTeamUser{..} = (\modelsTeamUserUsername -> ModelsTeamUser { modelsTeamUserUsername, ..} ) <$> f modelsTeamUserUsername
{-# INLINE modelsTeamUserUsernameL #-}



-- * ModelsTeamWithRight

-- | 'modelsTeamWithRightCreated' Lens
modelsTeamWithRightCreatedL :: Lens_' ModelsTeamWithRight (Maybe Text)
modelsTeamWithRightCreatedL f ModelsTeamWithRight{..} = (\modelsTeamWithRightCreated -> ModelsTeamWithRight { modelsTeamWithRightCreated, ..} ) <$> f modelsTeamWithRightCreated
{-# INLINE modelsTeamWithRightCreatedL #-}

-- | 'modelsTeamWithRightCreatedBy' Lens
modelsTeamWithRightCreatedByL :: Lens_' ModelsTeamWithRight (Maybe UserUser)
modelsTeamWithRightCreatedByL f ModelsTeamWithRight{..} = (\modelsTeamWithRightCreatedBy -> ModelsTeamWithRight { modelsTeamWithRightCreatedBy, ..} ) <$> f modelsTeamWithRightCreatedBy
{-# INLINE modelsTeamWithRightCreatedByL #-}

-- | 'modelsTeamWithRightDescription' Lens
modelsTeamWithRightDescriptionL :: Lens_' ModelsTeamWithRight (Maybe Text)
modelsTeamWithRightDescriptionL f ModelsTeamWithRight{..} = (\modelsTeamWithRightDescription -> ModelsTeamWithRight { modelsTeamWithRightDescription, ..} ) <$> f modelsTeamWithRightDescription
{-# INLINE modelsTeamWithRightDescriptionL #-}

-- | 'modelsTeamWithRightId' Lens
modelsTeamWithRightIdL :: Lens_' ModelsTeamWithRight (Maybe Int)
modelsTeamWithRightIdL f ModelsTeamWithRight{..} = (\modelsTeamWithRightId -> ModelsTeamWithRight { modelsTeamWithRightId, ..} ) <$> f modelsTeamWithRightId
{-# INLINE modelsTeamWithRightIdL #-}

-- | 'modelsTeamWithRightIncludePublic' Lens
modelsTeamWithRightIncludePublicL :: Lens_' ModelsTeamWithRight (Maybe Bool)
modelsTeamWithRightIncludePublicL f ModelsTeamWithRight{..} = (\modelsTeamWithRightIncludePublic -> ModelsTeamWithRight { modelsTeamWithRightIncludePublic, ..} ) <$> f modelsTeamWithRightIncludePublic
{-# INLINE modelsTeamWithRightIncludePublicL #-}

-- | 'modelsTeamWithRightIsPublic' Lens
modelsTeamWithRightIsPublicL :: Lens_' ModelsTeamWithRight (Maybe Bool)
modelsTeamWithRightIsPublicL f ModelsTeamWithRight{..} = (\modelsTeamWithRightIsPublic -> ModelsTeamWithRight { modelsTeamWithRightIsPublic, ..} ) <$> f modelsTeamWithRightIsPublic
{-# INLINE modelsTeamWithRightIsPublicL #-}

-- | 'modelsTeamWithRightMembers' Lens
modelsTeamWithRightMembersL :: Lens_' ModelsTeamWithRight (Maybe [ModelsTeamUser])
modelsTeamWithRightMembersL f ModelsTeamWithRight{..} = (\modelsTeamWithRightMembers -> ModelsTeamWithRight { modelsTeamWithRightMembers, ..} ) <$> f modelsTeamWithRightMembers
{-# INLINE modelsTeamWithRightMembersL #-}

-- | 'modelsTeamWithRightName' Lens
modelsTeamWithRightNameL :: Lens_' ModelsTeamWithRight (Maybe Text)
modelsTeamWithRightNameL f ModelsTeamWithRight{..} = (\modelsTeamWithRightName -> ModelsTeamWithRight { modelsTeamWithRightName, ..} ) <$> f modelsTeamWithRightName
{-# INLINE modelsTeamWithRightNameL #-}

-- | 'modelsTeamWithRightOidcId' Lens
modelsTeamWithRightOidcIdL :: Lens_' ModelsTeamWithRight (Maybe Text)
modelsTeamWithRightOidcIdL f ModelsTeamWithRight{..} = (\modelsTeamWithRightOidcId -> ModelsTeamWithRight { modelsTeamWithRightOidcId, ..} ) <$> f modelsTeamWithRightOidcId
{-# INLINE modelsTeamWithRightOidcIdL #-}

-- | 'modelsTeamWithRightRight' Lens
modelsTeamWithRightRightL :: Lens_' ModelsTeamWithRight (Maybe ModelsRight)
modelsTeamWithRightRightL f ModelsTeamWithRight{..} = (\modelsTeamWithRightRight -> ModelsTeamWithRight { modelsTeamWithRightRight, ..} ) <$> f modelsTeamWithRightRight
{-# INLINE modelsTeamWithRightRightL #-}

-- | 'modelsTeamWithRightUpdated' Lens
modelsTeamWithRightUpdatedL :: Lens_' ModelsTeamWithRight (Maybe Text)
modelsTeamWithRightUpdatedL f ModelsTeamWithRight{..} = (\modelsTeamWithRightUpdated -> ModelsTeamWithRight { modelsTeamWithRightUpdated, ..} ) <$> f modelsTeamWithRightUpdated
{-# INLINE modelsTeamWithRightUpdatedL #-}



-- * ModelsUserWithRight

-- | 'modelsUserWithRightCreated' Lens
modelsUserWithRightCreatedL :: Lens_' ModelsUserWithRight (Maybe Text)
modelsUserWithRightCreatedL f ModelsUserWithRight{..} = (\modelsUserWithRightCreated -> ModelsUserWithRight { modelsUserWithRightCreated, ..} ) <$> f modelsUserWithRightCreated
{-# INLINE modelsUserWithRightCreatedL #-}

-- | 'modelsUserWithRightEmail' Lens
modelsUserWithRightEmailL :: Lens_' ModelsUserWithRight (Maybe Text)
modelsUserWithRightEmailL f ModelsUserWithRight{..} = (\modelsUserWithRightEmail -> ModelsUserWithRight { modelsUserWithRightEmail, ..} ) <$> f modelsUserWithRightEmail
{-# INLINE modelsUserWithRightEmailL #-}

-- | 'modelsUserWithRightId' Lens
modelsUserWithRightIdL :: Lens_' ModelsUserWithRight (Maybe Int)
modelsUserWithRightIdL f ModelsUserWithRight{..} = (\modelsUserWithRightId -> ModelsUserWithRight { modelsUserWithRightId, ..} ) <$> f modelsUserWithRightId
{-# INLINE modelsUserWithRightIdL #-}

-- | 'modelsUserWithRightName' Lens
modelsUserWithRightNameL :: Lens_' ModelsUserWithRight (Maybe Text)
modelsUserWithRightNameL f ModelsUserWithRight{..} = (\modelsUserWithRightName -> ModelsUserWithRight { modelsUserWithRightName, ..} ) <$> f modelsUserWithRightName
{-# INLINE modelsUserWithRightNameL #-}

-- | 'modelsUserWithRightRight' Lens
modelsUserWithRightRightL :: Lens_' ModelsUserWithRight (Maybe ModelsRight)
modelsUserWithRightRightL f ModelsUserWithRight{..} = (\modelsUserWithRightRight -> ModelsUserWithRight { modelsUserWithRightRight, ..} ) <$> f modelsUserWithRightRight
{-# INLINE modelsUserWithRightRightL #-}

-- | 'modelsUserWithRightUpdated' Lens
modelsUserWithRightUpdatedL :: Lens_' ModelsUserWithRight (Maybe Text)
modelsUserWithRightUpdatedL f ModelsUserWithRight{..} = (\modelsUserWithRightUpdated -> ModelsUserWithRight { modelsUserWithRightUpdated, ..} ) <$> f modelsUserWithRightUpdated
{-# INLINE modelsUserWithRightUpdatedL #-}

-- | 'modelsUserWithRightUsername' Lens
modelsUserWithRightUsernameL :: Lens_' ModelsUserWithRight (Maybe Text)
modelsUserWithRightUsernameL f ModelsUserWithRight{..} = (\modelsUserWithRightUsername -> ModelsUserWithRight { modelsUserWithRightUsername, ..} ) <$> f modelsUserWithRightUsername
{-# INLINE modelsUserWithRightUsernameL #-}



-- * ModelsWebhook

-- | 'modelsWebhookCreated' Lens
modelsWebhookCreatedL :: Lens_' ModelsWebhook (Maybe Text)
modelsWebhookCreatedL f ModelsWebhook{..} = (\modelsWebhookCreated -> ModelsWebhook { modelsWebhookCreated, ..} ) <$> f modelsWebhookCreated
{-# INLINE modelsWebhookCreatedL #-}

-- | 'modelsWebhookCreatedBy' Lens
modelsWebhookCreatedByL :: Lens_' ModelsWebhook (Maybe UserUser)
modelsWebhookCreatedByL f ModelsWebhook{..} = (\modelsWebhookCreatedBy -> ModelsWebhook { modelsWebhookCreatedBy, ..} ) <$> f modelsWebhookCreatedBy
{-# INLINE modelsWebhookCreatedByL #-}

-- | 'modelsWebhookEvents' Lens
modelsWebhookEventsL :: Lens_' ModelsWebhook (Maybe [Text])
modelsWebhookEventsL f ModelsWebhook{..} = (\modelsWebhookEvents -> ModelsWebhook { modelsWebhookEvents, ..} ) <$> f modelsWebhookEvents
{-# INLINE modelsWebhookEventsL #-}

-- | 'modelsWebhookId' Lens
modelsWebhookIdL :: Lens_' ModelsWebhook (Maybe Int)
modelsWebhookIdL f ModelsWebhook{..} = (\modelsWebhookId -> ModelsWebhook { modelsWebhookId, ..} ) <$> f modelsWebhookId
{-# INLINE modelsWebhookIdL #-}

-- | 'modelsWebhookProjectId' Lens
modelsWebhookProjectIdL :: Lens_' ModelsWebhook (Maybe Int)
modelsWebhookProjectIdL f ModelsWebhook{..} = (\modelsWebhookProjectId -> ModelsWebhook { modelsWebhookProjectId, ..} ) <$> f modelsWebhookProjectId
{-# INLINE modelsWebhookProjectIdL #-}

-- | 'modelsWebhookSecret' Lens
modelsWebhookSecretL :: Lens_' ModelsWebhook (Maybe Text)
modelsWebhookSecretL f ModelsWebhook{..} = (\modelsWebhookSecret -> ModelsWebhook { modelsWebhookSecret, ..} ) <$> f modelsWebhookSecret
{-# INLINE modelsWebhookSecretL #-}

-- | 'modelsWebhookTargetUrl' Lens
modelsWebhookTargetUrlL :: Lens_' ModelsWebhook (Maybe Text)
modelsWebhookTargetUrlL f ModelsWebhook{..} = (\modelsWebhookTargetUrl -> ModelsWebhook { modelsWebhookTargetUrl, ..} ) <$> f modelsWebhookTargetUrl
{-# INLINE modelsWebhookTargetUrlL #-}

-- | 'modelsWebhookUpdated' Lens
modelsWebhookUpdatedL :: Lens_' ModelsWebhook (Maybe Text)
modelsWebhookUpdatedL f ModelsWebhook{..} = (\modelsWebhookUpdated -> ModelsWebhook { modelsWebhookUpdated, ..} ) <$> f modelsWebhookUpdated
{-# INLINE modelsWebhookUpdatedL #-}



-- * NotificationsDatabaseNotification

-- | 'notificationsDatabaseNotificationCreated' Lens
notificationsDatabaseNotificationCreatedL :: Lens_' NotificationsDatabaseNotification (Maybe Text)
notificationsDatabaseNotificationCreatedL f NotificationsDatabaseNotification{..} = (\notificationsDatabaseNotificationCreated -> NotificationsDatabaseNotification { notificationsDatabaseNotificationCreated, ..} ) <$> f notificationsDatabaseNotificationCreated
{-# INLINE notificationsDatabaseNotificationCreatedL #-}

-- | 'notificationsDatabaseNotificationId' Lens
notificationsDatabaseNotificationIdL :: Lens_' NotificationsDatabaseNotification (Maybe Int)
notificationsDatabaseNotificationIdL f NotificationsDatabaseNotification{..} = (\notificationsDatabaseNotificationId -> NotificationsDatabaseNotification { notificationsDatabaseNotificationId, ..} ) <$> f notificationsDatabaseNotificationId
{-# INLINE notificationsDatabaseNotificationIdL #-}

-- | 'notificationsDatabaseNotificationName' Lens
notificationsDatabaseNotificationNameL :: Lens_' NotificationsDatabaseNotification (Maybe Text)
notificationsDatabaseNotificationNameL f NotificationsDatabaseNotification{..} = (\notificationsDatabaseNotificationName -> NotificationsDatabaseNotification { notificationsDatabaseNotificationName, ..} ) <$> f notificationsDatabaseNotificationName
{-# INLINE notificationsDatabaseNotificationNameL #-}

-- | 'notificationsDatabaseNotificationNotification' Lens
notificationsDatabaseNotificationNotificationL :: Lens_' NotificationsDatabaseNotification (Maybe A.Value)
notificationsDatabaseNotificationNotificationL f NotificationsDatabaseNotification{..} = (\notificationsDatabaseNotificationNotification -> NotificationsDatabaseNotification { notificationsDatabaseNotificationNotification, ..} ) <$> f notificationsDatabaseNotificationNotification
{-# INLINE notificationsDatabaseNotificationNotificationL #-}

-- | 'notificationsDatabaseNotificationReadAt' Lens
notificationsDatabaseNotificationReadAtL :: Lens_' NotificationsDatabaseNotification (Maybe Text)
notificationsDatabaseNotificationReadAtL f NotificationsDatabaseNotification{..} = (\notificationsDatabaseNotificationReadAt -> NotificationsDatabaseNotification { notificationsDatabaseNotificationReadAt, ..} ) <$> f notificationsDatabaseNotificationReadAt
{-# INLINE notificationsDatabaseNotificationReadAtL #-}



-- * OpenidCallback

-- | 'openidCallbackCode' Lens
openidCallbackCodeL :: Lens_' OpenidCallback (Maybe Text)
openidCallbackCodeL f OpenidCallback{..} = (\openidCallbackCode -> OpenidCallback { openidCallbackCode, ..} ) <$> f openidCallbackCode
{-# INLINE openidCallbackCodeL #-}

-- | 'openidCallbackRedirectUrl' Lens
openidCallbackRedirectUrlL :: Lens_' OpenidCallback (Maybe Text)
openidCallbackRedirectUrlL f OpenidCallback{..} = (\openidCallbackRedirectUrl -> OpenidCallback { openidCallbackRedirectUrl, ..} ) <$> f openidCallbackRedirectUrl
{-# INLINE openidCallbackRedirectUrlL #-}

-- | 'openidCallbackScope' Lens
openidCallbackScopeL :: Lens_' OpenidCallback (Maybe Text)
openidCallbackScopeL f OpenidCallback{..} = (\openidCallbackScope -> OpenidCallback { openidCallbackScope, ..} ) <$> f openidCallbackScope
{-# INLINE openidCallbackScopeL #-}



-- * OpenidProvider

-- | 'openidProviderAuthUrl' Lens
openidProviderAuthUrlL :: Lens_' OpenidProvider (Maybe Text)
openidProviderAuthUrlL f OpenidProvider{..} = (\openidProviderAuthUrl -> OpenidProvider { openidProviderAuthUrl, ..} ) <$> f openidProviderAuthUrl
{-# INLINE openidProviderAuthUrlL #-}

-- | 'openidProviderClientId' Lens
openidProviderClientIdL :: Lens_' OpenidProvider (Maybe Text)
openidProviderClientIdL f OpenidProvider{..} = (\openidProviderClientId -> OpenidProvider { openidProviderClientId, ..} ) <$> f openidProviderClientId
{-# INLINE openidProviderClientIdL #-}

-- | 'openidProviderKey' Lens
openidProviderKeyL :: Lens_' OpenidProvider (Maybe Text)
openidProviderKeyL f OpenidProvider{..} = (\openidProviderKey -> OpenidProvider { openidProviderKey, ..} ) <$> f openidProviderKey
{-# INLINE openidProviderKeyL #-}

-- | 'openidProviderLogoutUrl' Lens
openidProviderLogoutUrlL :: Lens_' OpenidProvider (Maybe Text)
openidProviderLogoutUrlL f OpenidProvider{..} = (\openidProviderLogoutUrl -> OpenidProvider { openidProviderLogoutUrl, ..} ) <$> f openidProviderLogoutUrl
{-# INLINE openidProviderLogoutUrlL #-}

-- | 'openidProviderName' Lens
openidProviderNameL :: Lens_' OpenidProvider (Maybe Text)
openidProviderNameL f OpenidProvider{..} = (\openidProviderName -> OpenidProvider { openidProviderName, ..} ) <$> f openidProviderName
{-# INLINE openidProviderNameL #-}

-- | 'openidProviderScope' Lens
openidProviderScopeL :: Lens_' OpenidProvider (Maybe Text)
openidProviderScopeL f OpenidProvider{..} = (\openidProviderScope -> OpenidProvider { openidProviderScope, ..} ) <$> f openidProviderScope
{-# INLINE openidProviderScopeL #-}



-- * TodoistMigration

-- | 'todoistMigrationCode' Lens
todoistMigrationCodeL :: Lens_' TodoistMigration (Maybe Text)
todoistMigrationCodeL f TodoistMigration{..} = (\todoistMigrationCode -> TodoistMigration { todoistMigrationCode, ..} ) <$> f todoistMigrationCode
{-# INLINE todoistMigrationCodeL #-}



-- * TrelloMigration

-- | 'trelloMigrationCode' Lens
trelloMigrationCodeL :: Lens_' TrelloMigration (Maybe Text)
trelloMigrationCodeL f TrelloMigration{..} = (\trelloMigrationCode -> TrelloMigration { trelloMigrationCode, ..} ) <$> f trelloMigrationCode
{-# INLINE trelloMigrationCodeL #-}



-- * UserAPIUserPassword

-- | 'userAPIUserPasswordEmail' Lens
userAPIUserPasswordEmailL :: Lens_' UserAPIUserPassword (Maybe Text)
userAPIUserPasswordEmailL f UserAPIUserPassword{..} = (\userAPIUserPasswordEmail -> UserAPIUserPassword { userAPIUserPasswordEmail, ..} ) <$> f userAPIUserPasswordEmail
{-# INLINE userAPIUserPasswordEmailL #-}

-- | 'userAPIUserPasswordId' Lens
userAPIUserPasswordIdL :: Lens_' UserAPIUserPassword (Maybe Int)
userAPIUserPasswordIdL f UserAPIUserPassword{..} = (\userAPIUserPasswordId -> UserAPIUserPassword { userAPIUserPasswordId, ..} ) <$> f userAPIUserPasswordId
{-# INLINE userAPIUserPasswordIdL #-}

-- | 'userAPIUserPasswordPassword' Lens
userAPIUserPasswordPasswordL :: Lens_' UserAPIUserPassword (Maybe Text)
userAPIUserPasswordPasswordL f UserAPIUserPassword{..} = (\userAPIUserPasswordPassword -> UserAPIUserPassword { userAPIUserPasswordPassword, ..} ) <$> f userAPIUserPasswordPassword
{-# INLINE userAPIUserPasswordPasswordL #-}

-- | 'userAPIUserPasswordUsername' Lens
userAPIUserPasswordUsernameL :: Lens_' UserAPIUserPassword (Maybe Text)
userAPIUserPasswordUsernameL f UserAPIUserPassword{..} = (\userAPIUserPasswordUsername -> UserAPIUserPassword { userAPIUserPasswordUsername, ..} ) <$> f userAPIUserPasswordUsername
{-# INLINE userAPIUserPasswordUsernameL #-}



-- * UserEmailConfirm

-- | 'userEmailConfirmToken' Lens
userEmailConfirmTokenL :: Lens_' UserEmailConfirm (Maybe Text)
userEmailConfirmTokenL f UserEmailConfirm{..} = (\userEmailConfirmToken -> UserEmailConfirm { userEmailConfirmToken, ..} ) <$> f userEmailConfirmToken
{-# INLINE userEmailConfirmTokenL #-}



-- * UserEmailUpdate

-- | 'userEmailUpdateNewEmail' Lens
userEmailUpdateNewEmailL :: Lens_' UserEmailUpdate (Maybe Text)
userEmailUpdateNewEmailL f UserEmailUpdate{..} = (\userEmailUpdateNewEmail -> UserEmailUpdate { userEmailUpdateNewEmail, ..} ) <$> f userEmailUpdateNewEmail
{-# INLINE userEmailUpdateNewEmailL #-}

-- | 'userEmailUpdatePassword' Lens
userEmailUpdatePasswordL :: Lens_' UserEmailUpdate (Maybe Text)
userEmailUpdatePasswordL f UserEmailUpdate{..} = (\userEmailUpdatePassword -> UserEmailUpdate { userEmailUpdatePassword, ..} ) <$> f userEmailUpdatePassword
{-# INLINE userEmailUpdatePasswordL #-}



-- * UserLogin

-- | 'userLoginLongToken' Lens
userLoginLongTokenL :: Lens_' UserLogin (Maybe Bool)
userLoginLongTokenL f UserLogin{..} = (\userLoginLongToken -> UserLogin { userLoginLongToken, ..} ) <$> f userLoginLongToken
{-# INLINE userLoginLongTokenL #-}

-- | 'userLoginPassword' Lens
userLoginPasswordL :: Lens_' UserLogin (Maybe Text)
userLoginPasswordL f UserLogin{..} = (\userLoginPassword -> UserLogin { userLoginPassword, ..} ) <$> f userLoginPassword
{-# INLINE userLoginPasswordL #-}

-- | 'userLoginTotpPasscode' Lens
userLoginTotpPasscodeL :: Lens_' UserLogin (Maybe Text)
userLoginTotpPasscodeL f UserLogin{..} = (\userLoginTotpPasscode -> UserLogin { userLoginTotpPasscode, ..} ) <$> f userLoginTotpPasscode
{-# INLINE userLoginTotpPasscodeL #-}

-- | 'userLoginUsername' Lens
userLoginUsernameL :: Lens_' UserLogin (Maybe Text)
userLoginUsernameL f UserLogin{..} = (\userLoginUsername -> UserLogin { userLoginUsername, ..} ) <$> f userLoginUsername
{-# INLINE userLoginUsernameL #-}



-- * UserPasswordReset

-- | 'userPasswordResetNewPassword' Lens
userPasswordResetNewPasswordL :: Lens_' UserPasswordReset (Maybe Text)
userPasswordResetNewPasswordL f UserPasswordReset{..} = (\userPasswordResetNewPassword -> UserPasswordReset { userPasswordResetNewPassword, ..} ) <$> f userPasswordResetNewPassword
{-# INLINE userPasswordResetNewPasswordL #-}

-- | 'userPasswordResetToken' Lens
userPasswordResetTokenL :: Lens_' UserPasswordReset (Maybe Text)
userPasswordResetTokenL f UserPasswordReset{..} = (\userPasswordResetToken -> UserPasswordReset { userPasswordResetToken, ..} ) <$> f userPasswordResetToken
{-# INLINE userPasswordResetTokenL #-}



-- * UserPasswordTokenRequest

-- | 'userPasswordTokenRequestEmail' Lens
userPasswordTokenRequestEmailL :: Lens_' UserPasswordTokenRequest (Maybe Text)
userPasswordTokenRequestEmailL f UserPasswordTokenRequest{..} = (\userPasswordTokenRequestEmail -> UserPasswordTokenRequest { userPasswordTokenRequestEmail, ..} ) <$> f userPasswordTokenRequestEmail
{-# INLINE userPasswordTokenRequestEmailL #-}



-- * UserTOTP

-- | 'userTOTPEnabled' Lens
userTOTPEnabledL :: Lens_' UserTOTP (Maybe Bool)
userTOTPEnabledL f UserTOTP{..} = (\userTOTPEnabled -> UserTOTP { userTOTPEnabled, ..} ) <$> f userTOTPEnabled
{-# INLINE userTOTPEnabledL #-}

-- | 'userTOTPSecret' Lens
userTOTPSecretL :: Lens_' UserTOTP (Maybe Text)
userTOTPSecretL f UserTOTP{..} = (\userTOTPSecret -> UserTOTP { userTOTPSecret, ..} ) <$> f userTOTPSecret
{-# INLINE userTOTPSecretL #-}

-- | 'userTOTPUrl' Lens
userTOTPUrlL :: Lens_' UserTOTP (Maybe Text)
userTOTPUrlL f UserTOTP{..} = (\userTOTPUrl -> UserTOTP { userTOTPUrl, ..} ) <$> f userTOTPUrl
{-# INLINE userTOTPUrlL #-}



-- * UserTOTPPasscode

-- | 'userTOTPPasscodePasscode' Lens
userTOTPPasscodePasscodeL :: Lens_' UserTOTPPasscode (Maybe Text)
userTOTPPasscodePasscodeL f UserTOTPPasscode{..} = (\userTOTPPasscodePasscode -> UserTOTPPasscode { userTOTPPasscodePasscode, ..} ) <$> f userTOTPPasscodePasscode
{-# INLINE userTOTPPasscodePasscodeL #-}



-- * UserToken

-- | 'userTokenCreated' Lens
userTokenCreatedL :: Lens_' UserToken (Maybe Text)
userTokenCreatedL f UserToken{..} = (\userTokenCreated -> UserToken { userTokenCreated, ..} ) <$> f userTokenCreated
{-# INLINE userTokenCreatedL #-}

-- | 'userTokenId' Lens
userTokenIdL :: Lens_' UserToken (Maybe Int)
userTokenIdL f UserToken{..} = (\userTokenId -> UserToken { userTokenId, ..} ) <$> f userTokenId
{-# INLINE userTokenIdL #-}

-- | 'userTokenToken' Lens
userTokenTokenL :: Lens_' UserToken (Maybe Text)
userTokenTokenL f UserToken{..} = (\userTokenToken -> UserToken { userTokenToken, ..} ) <$> f userTokenToken
{-# INLINE userTokenTokenL #-}



-- * UserUser

-- | 'userUserCreated' Lens
userUserCreatedL :: Lens_' UserUser (Maybe Text)
userUserCreatedL f UserUser{..} = (\userUserCreated -> UserUser { userUserCreated, ..} ) <$> f userUserCreated
{-# INLINE userUserCreatedL #-}

-- | 'userUserEmail' Lens
userUserEmailL :: Lens_' UserUser (Maybe Text)
userUserEmailL f UserUser{..} = (\userUserEmail -> UserUser { userUserEmail, ..} ) <$> f userUserEmail
{-# INLINE userUserEmailL #-}

-- | 'userUserId' Lens
userUserIdL :: Lens_' UserUser (Maybe Int)
userUserIdL f UserUser{..} = (\userUserId -> UserUser { userUserId, ..} ) <$> f userUserId
{-# INLINE userUserIdL #-}

-- | 'userUserName' Lens
userUserNameL :: Lens_' UserUser (Maybe Text)
userUserNameL f UserUser{..} = (\userUserName -> UserUser { userUserName, ..} ) <$> f userUserName
{-# INLINE userUserNameL #-}

-- | 'userUserUpdated' Lens
userUserUpdatedL :: Lens_' UserUser (Maybe Text)
userUserUpdatedL f UserUser{..} = (\userUserUpdated -> UserUser { userUserUpdated, ..} ) <$> f userUserUpdated
{-# INLINE userUserUpdatedL #-}

-- | 'userUserUsername' Lens
userUserUsernameL :: Lens_' UserUser (Maybe Text)
userUserUsernameL f UserUser{..} = (\userUserUsername -> UserUser { userUserUsername, ..} ) <$> f userUserUsername
{-# INLINE userUserUsernameL #-}



-- * V1AuthInfo

-- | 'v1AuthInfoLocal' Lens
v1AuthInfoLocalL :: Lens_' V1AuthInfo (Maybe V1LocalAuthInfo)
v1AuthInfoLocalL f V1AuthInfo{..} = (\v1AuthInfoLocal -> V1AuthInfo { v1AuthInfoLocal, ..} ) <$> f v1AuthInfoLocal
{-# INLINE v1AuthInfoLocalL #-}

-- | 'v1AuthInfoOpenidConnect' Lens
v1AuthInfoOpenidConnectL :: Lens_' V1AuthInfo (Maybe V1OpenIDAuthInfo)
v1AuthInfoOpenidConnectL f V1AuthInfo{..} = (\v1AuthInfoOpenidConnect -> V1AuthInfo { v1AuthInfoOpenidConnect, ..} ) <$> f v1AuthInfoOpenidConnect
{-# INLINE v1AuthInfoOpenidConnectL #-}



-- * V1LegalInfo

-- | 'v1LegalInfoImprintUrl' Lens
v1LegalInfoImprintUrlL :: Lens_' V1LegalInfo (Maybe Text)
v1LegalInfoImprintUrlL f V1LegalInfo{..} = (\v1LegalInfoImprintUrl -> V1LegalInfo { v1LegalInfoImprintUrl, ..} ) <$> f v1LegalInfoImprintUrl
{-# INLINE v1LegalInfoImprintUrlL #-}

-- | 'v1LegalInfoPrivacyPolicyUrl' Lens
v1LegalInfoPrivacyPolicyUrlL :: Lens_' V1LegalInfo (Maybe Text)
v1LegalInfoPrivacyPolicyUrlL f V1LegalInfo{..} = (\v1LegalInfoPrivacyPolicyUrl -> V1LegalInfo { v1LegalInfoPrivacyPolicyUrl, ..} ) <$> f v1LegalInfoPrivacyPolicyUrl
{-# INLINE v1LegalInfoPrivacyPolicyUrlL #-}



-- * V1LinkShareAuth

-- | 'v1LinkShareAuthPassword' Lens
v1LinkShareAuthPasswordL :: Lens_' V1LinkShareAuth (Maybe Text)
v1LinkShareAuthPasswordL f V1LinkShareAuth{..} = (\v1LinkShareAuthPassword -> V1LinkShareAuth { v1LinkShareAuthPassword, ..} ) <$> f v1LinkShareAuthPassword
{-# INLINE v1LinkShareAuthPasswordL #-}



-- * V1LocalAuthInfo

-- | 'v1LocalAuthInfoEnabled' Lens
v1LocalAuthInfoEnabledL :: Lens_' V1LocalAuthInfo (Maybe Bool)
v1LocalAuthInfoEnabledL f V1LocalAuthInfo{..} = (\v1LocalAuthInfoEnabled -> V1LocalAuthInfo { v1LocalAuthInfoEnabled, ..} ) <$> f v1LocalAuthInfoEnabled
{-# INLINE v1LocalAuthInfoEnabledL #-}



-- * V1OpenIDAuthInfo

-- | 'v1OpenIDAuthInfoEnabled' Lens
v1OpenIDAuthInfoEnabledL :: Lens_' V1OpenIDAuthInfo (Maybe Bool)
v1OpenIDAuthInfoEnabledL f V1OpenIDAuthInfo{..} = (\v1OpenIDAuthInfoEnabled -> V1OpenIDAuthInfo { v1OpenIDAuthInfoEnabled, ..} ) <$> f v1OpenIDAuthInfoEnabled
{-# INLINE v1OpenIDAuthInfoEnabledL #-}

-- | 'v1OpenIDAuthInfoProviders' Lens
v1OpenIDAuthInfoProvidersL :: Lens_' V1OpenIDAuthInfo (Maybe [OpenidProvider])
v1OpenIDAuthInfoProvidersL f V1OpenIDAuthInfo{..} = (\v1OpenIDAuthInfoProviders -> V1OpenIDAuthInfo { v1OpenIDAuthInfoProviders, ..} ) <$> f v1OpenIDAuthInfoProviders
{-# INLINE v1OpenIDAuthInfoProvidersL #-}



-- * V1UserAvatarProvider

-- | 'v1UserAvatarProviderAvatarProvider' Lens
v1UserAvatarProviderAvatarProviderL :: Lens_' V1UserAvatarProvider (Maybe Text)
v1UserAvatarProviderAvatarProviderL f V1UserAvatarProvider{..} = (\v1UserAvatarProviderAvatarProvider -> V1UserAvatarProvider { v1UserAvatarProviderAvatarProvider, ..} ) <$> f v1UserAvatarProviderAvatarProvider
{-# INLINE v1UserAvatarProviderAvatarProviderL #-}



-- * V1UserDeletionRequestConfirm

-- | 'v1UserDeletionRequestConfirmToken' Lens
v1UserDeletionRequestConfirmTokenL :: Lens_' V1UserDeletionRequestConfirm (Maybe Text)
v1UserDeletionRequestConfirmTokenL f V1UserDeletionRequestConfirm{..} = (\v1UserDeletionRequestConfirmToken -> V1UserDeletionRequestConfirm { v1UserDeletionRequestConfirmToken, ..} ) <$> f v1UserDeletionRequestConfirmToken
{-# INLINE v1UserDeletionRequestConfirmTokenL #-}



-- * V1UserPassword

-- | 'v1UserPasswordNewPassword' Lens
v1UserPasswordNewPasswordL :: Lens_' V1UserPassword (Maybe Text)
v1UserPasswordNewPasswordL f V1UserPassword{..} = (\v1UserPasswordNewPassword -> V1UserPassword { v1UserPasswordNewPassword, ..} ) <$> f v1UserPasswordNewPassword
{-# INLINE v1UserPasswordNewPasswordL #-}

-- | 'v1UserPasswordOldPassword' Lens
v1UserPasswordOldPasswordL :: Lens_' V1UserPassword (Maybe Text)
v1UserPasswordOldPasswordL f V1UserPassword{..} = (\v1UserPasswordOldPassword -> V1UserPassword { v1UserPasswordOldPassword, ..} ) <$> f v1UserPasswordOldPassword
{-# INLINE v1UserPasswordOldPasswordL #-}



-- * V1UserPasswordConfirmation

-- | 'v1UserPasswordConfirmationPassword' Lens
v1UserPasswordConfirmationPasswordL :: Lens_' V1UserPasswordConfirmation (Maybe Text)
v1UserPasswordConfirmationPasswordL f V1UserPasswordConfirmation{..} = (\v1UserPasswordConfirmationPassword -> V1UserPasswordConfirmation { v1UserPasswordConfirmationPassword, ..} ) <$> f v1UserPasswordConfirmationPassword
{-# INLINE v1UserPasswordConfirmationPasswordL #-}



-- * V1UserSettings

-- | 'v1UserSettingsDefaultProjectId' Lens
v1UserSettingsDefaultProjectIdL :: Lens_' V1UserSettings (Maybe Int)
v1UserSettingsDefaultProjectIdL f V1UserSettings{..} = (\v1UserSettingsDefaultProjectId -> V1UserSettings { v1UserSettingsDefaultProjectId, ..} ) <$> f v1UserSettingsDefaultProjectId
{-# INLINE v1UserSettingsDefaultProjectIdL #-}

-- | 'v1UserSettingsDiscoverableByEmail' Lens
v1UserSettingsDiscoverableByEmailL :: Lens_' V1UserSettings (Maybe Bool)
v1UserSettingsDiscoverableByEmailL f V1UserSettings{..} = (\v1UserSettingsDiscoverableByEmail -> V1UserSettings { v1UserSettingsDiscoverableByEmail, ..} ) <$> f v1UserSettingsDiscoverableByEmail
{-# INLINE v1UserSettingsDiscoverableByEmailL #-}

-- | 'v1UserSettingsDiscoverableByName' Lens
v1UserSettingsDiscoverableByNameL :: Lens_' V1UserSettings (Maybe Bool)
v1UserSettingsDiscoverableByNameL f V1UserSettings{..} = (\v1UserSettingsDiscoverableByName -> V1UserSettings { v1UserSettingsDiscoverableByName, ..} ) <$> f v1UserSettingsDiscoverableByName
{-# INLINE v1UserSettingsDiscoverableByNameL #-}

-- | 'v1UserSettingsEmailRemindersEnabled' Lens
v1UserSettingsEmailRemindersEnabledL :: Lens_' V1UserSettings (Maybe Bool)
v1UserSettingsEmailRemindersEnabledL f V1UserSettings{..} = (\v1UserSettingsEmailRemindersEnabled -> V1UserSettings { v1UserSettingsEmailRemindersEnabled, ..} ) <$> f v1UserSettingsEmailRemindersEnabled
{-# INLINE v1UserSettingsEmailRemindersEnabledL #-}

-- | 'v1UserSettingsFrontendSettings' Lens
v1UserSettingsFrontendSettingsL :: Lens_' V1UserSettings (Maybe A.Value)
v1UserSettingsFrontendSettingsL f V1UserSettings{..} = (\v1UserSettingsFrontendSettings -> V1UserSettings { v1UserSettingsFrontendSettings, ..} ) <$> f v1UserSettingsFrontendSettings
{-# INLINE v1UserSettingsFrontendSettingsL #-}

-- | 'v1UserSettingsLanguage' Lens
v1UserSettingsLanguageL :: Lens_' V1UserSettings (Maybe Text)
v1UserSettingsLanguageL f V1UserSettings{..} = (\v1UserSettingsLanguage -> V1UserSettings { v1UserSettingsLanguage, ..} ) <$> f v1UserSettingsLanguage
{-# INLINE v1UserSettingsLanguageL #-}

-- | 'v1UserSettingsName' Lens
v1UserSettingsNameL :: Lens_' V1UserSettings (Maybe Text)
v1UserSettingsNameL f V1UserSettings{..} = (\v1UserSettingsName -> V1UserSettings { v1UserSettingsName, ..} ) <$> f v1UserSettingsName
{-# INLINE v1UserSettingsNameL #-}

-- | 'v1UserSettingsOverdueTasksRemindersEnabled' Lens
v1UserSettingsOverdueTasksRemindersEnabledL :: Lens_' V1UserSettings (Maybe Bool)
v1UserSettingsOverdueTasksRemindersEnabledL f V1UserSettings{..} = (\v1UserSettingsOverdueTasksRemindersEnabled -> V1UserSettings { v1UserSettingsOverdueTasksRemindersEnabled, ..} ) <$> f v1UserSettingsOverdueTasksRemindersEnabled
{-# INLINE v1UserSettingsOverdueTasksRemindersEnabledL #-}

-- | 'v1UserSettingsOverdueTasksRemindersTime' Lens
v1UserSettingsOverdueTasksRemindersTimeL :: Lens_' V1UserSettings (Maybe Text)
v1UserSettingsOverdueTasksRemindersTimeL f V1UserSettings{..} = (\v1UserSettingsOverdueTasksRemindersTime -> V1UserSettings { v1UserSettingsOverdueTasksRemindersTime, ..} ) <$> f v1UserSettingsOverdueTasksRemindersTime
{-# INLINE v1UserSettingsOverdueTasksRemindersTimeL #-}

-- | 'v1UserSettingsTimezone' Lens
v1UserSettingsTimezoneL :: Lens_' V1UserSettings (Maybe Text)
v1UserSettingsTimezoneL f V1UserSettings{..} = (\v1UserSettingsTimezone -> V1UserSettings { v1UserSettingsTimezone, ..} ) <$> f v1UserSettingsTimezone
{-# INLINE v1UserSettingsTimezoneL #-}

-- | 'v1UserSettingsWeekStart' Lens
v1UserSettingsWeekStartL :: Lens_' V1UserSettings (Maybe Int)
v1UserSettingsWeekStartL f V1UserSettings{..} = (\v1UserSettingsWeekStart -> V1UserSettings { v1UserSettingsWeekStart, ..} ) <$> f v1UserSettingsWeekStart
{-# INLINE v1UserSettingsWeekStartL #-}



-- * V1UserWithSettings

-- | 'v1UserWithSettingsCreated' Lens
v1UserWithSettingsCreatedL :: Lens_' V1UserWithSettings (Maybe Text)
v1UserWithSettingsCreatedL f V1UserWithSettings{..} = (\v1UserWithSettingsCreated -> V1UserWithSettings { v1UserWithSettingsCreated, ..} ) <$> f v1UserWithSettingsCreated
{-# INLINE v1UserWithSettingsCreatedL #-}

-- | 'v1UserWithSettingsDeletionScheduledAt' Lens
v1UserWithSettingsDeletionScheduledAtL :: Lens_' V1UserWithSettings (Maybe Text)
v1UserWithSettingsDeletionScheduledAtL f V1UserWithSettings{..} = (\v1UserWithSettingsDeletionScheduledAt -> V1UserWithSettings { v1UserWithSettingsDeletionScheduledAt, ..} ) <$> f v1UserWithSettingsDeletionScheduledAt
{-# INLINE v1UserWithSettingsDeletionScheduledAtL #-}

-- | 'v1UserWithSettingsEmail' Lens
v1UserWithSettingsEmailL :: Lens_' V1UserWithSettings (Maybe Text)
v1UserWithSettingsEmailL f V1UserWithSettings{..} = (\v1UserWithSettingsEmail -> V1UserWithSettings { v1UserWithSettingsEmail, ..} ) <$> f v1UserWithSettingsEmail
{-# INLINE v1UserWithSettingsEmailL #-}

-- | 'v1UserWithSettingsId' Lens
v1UserWithSettingsIdL :: Lens_' V1UserWithSettings (Maybe Int)
v1UserWithSettingsIdL f V1UserWithSettings{..} = (\v1UserWithSettingsId -> V1UserWithSettings { v1UserWithSettingsId, ..} ) <$> f v1UserWithSettingsId
{-# INLINE v1UserWithSettingsIdL #-}

-- | 'v1UserWithSettingsIsLocalUser' Lens
v1UserWithSettingsIsLocalUserL :: Lens_' V1UserWithSettings (Maybe Bool)
v1UserWithSettingsIsLocalUserL f V1UserWithSettings{..} = (\v1UserWithSettingsIsLocalUser -> V1UserWithSettings { v1UserWithSettingsIsLocalUser, ..} ) <$> f v1UserWithSettingsIsLocalUser
{-# INLINE v1UserWithSettingsIsLocalUserL #-}

-- | 'v1UserWithSettingsName' Lens
v1UserWithSettingsNameL :: Lens_' V1UserWithSettings (Maybe Text)
v1UserWithSettingsNameL f V1UserWithSettings{..} = (\v1UserWithSettingsName -> V1UserWithSettings { v1UserWithSettingsName, ..} ) <$> f v1UserWithSettingsName
{-# INLINE v1UserWithSettingsNameL #-}

-- | 'v1UserWithSettingsSettings' Lens
v1UserWithSettingsSettingsL :: Lens_' V1UserWithSettings (Maybe V1UserSettings)
v1UserWithSettingsSettingsL f V1UserWithSettings{..} = (\v1UserWithSettingsSettings -> V1UserWithSettings { v1UserWithSettingsSettings, ..} ) <$> f v1UserWithSettingsSettings
{-# INLINE v1UserWithSettingsSettingsL #-}

-- | 'v1UserWithSettingsUpdated' Lens
v1UserWithSettingsUpdatedL :: Lens_' V1UserWithSettings (Maybe Text)
v1UserWithSettingsUpdatedL f V1UserWithSettings{..} = (\v1UserWithSettingsUpdated -> V1UserWithSettings { v1UserWithSettingsUpdated, ..} ) <$> f v1UserWithSettingsUpdated
{-# INLINE v1UserWithSettingsUpdatedL #-}

-- | 'v1UserWithSettingsUsername' Lens
v1UserWithSettingsUsernameL :: Lens_' V1UserWithSettings (Maybe Text)
v1UserWithSettingsUsernameL f V1UserWithSettings{..} = (\v1UserWithSettingsUsername -> V1UserWithSettings { v1UserWithSettingsUsername, ..} ) <$> f v1UserWithSettingsUsername
{-# INLINE v1UserWithSettingsUsernameL #-}



-- * V1VikunjaInfos

-- | 'v1VikunjaInfosAuth' Lens
v1VikunjaInfosAuthL :: Lens_' V1VikunjaInfos (Maybe V1AuthInfo)
v1VikunjaInfosAuthL f V1VikunjaInfos{..} = (\v1VikunjaInfosAuth -> V1VikunjaInfos { v1VikunjaInfosAuth, ..} ) <$> f v1VikunjaInfosAuth
{-# INLINE v1VikunjaInfosAuthL #-}

-- | 'v1VikunjaInfosAvailableMigrators' Lens
v1VikunjaInfosAvailableMigratorsL :: Lens_' V1VikunjaInfos (Maybe [Text])
v1VikunjaInfosAvailableMigratorsL f V1VikunjaInfos{..} = (\v1VikunjaInfosAvailableMigrators -> V1VikunjaInfos { v1VikunjaInfosAvailableMigrators, ..} ) <$> f v1VikunjaInfosAvailableMigrators
{-# INLINE v1VikunjaInfosAvailableMigratorsL #-}

-- | 'v1VikunjaInfosCaldavEnabled' Lens
v1VikunjaInfosCaldavEnabledL :: Lens_' V1VikunjaInfos (Maybe Bool)
v1VikunjaInfosCaldavEnabledL f V1VikunjaInfos{..} = (\v1VikunjaInfosCaldavEnabled -> V1VikunjaInfos { v1VikunjaInfosCaldavEnabled, ..} ) <$> f v1VikunjaInfosCaldavEnabled
{-# INLINE v1VikunjaInfosCaldavEnabledL #-}

-- | 'v1VikunjaInfosDemoModeEnabled' Lens
v1VikunjaInfosDemoModeEnabledL :: Lens_' V1VikunjaInfos (Maybe Bool)
v1VikunjaInfosDemoModeEnabledL f V1VikunjaInfos{..} = (\v1VikunjaInfosDemoModeEnabled -> V1VikunjaInfos { v1VikunjaInfosDemoModeEnabled, ..} ) <$> f v1VikunjaInfosDemoModeEnabled
{-# INLINE v1VikunjaInfosDemoModeEnabledL #-}

-- | 'v1VikunjaInfosEmailRemindersEnabled' Lens
v1VikunjaInfosEmailRemindersEnabledL :: Lens_' V1VikunjaInfos (Maybe Bool)
v1VikunjaInfosEmailRemindersEnabledL f V1VikunjaInfos{..} = (\v1VikunjaInfosEmailRemindersEnabled -> V1VikunjaInfos { v1VikunjaInfosEmailRemindersEnabled, ..} ) <$> f v1VikunjaInfosEmailRemindersEnabled
{-# INLINE v1VikunjaInfosEmailRemindersEnabledL #-}

-- | 'v1VikunjaInfosEnabledBackgroundProviders' Lens
v1VikunjaInfosEnabledBackgroundProvidersL :: Lens_' V1VikunjaInfos (Maybe [Text])
v1VikunjaInfosEnabledBackgroundProvidersL f V1VikunjaInfos{..} = (\v1VikunjaInfosEnabledBackgroundProviders -> V1VikunjaInfos { v1VikunjaInfosEnabledBackgroundProviders, ..} ) <$> f v1VikunjaInfosEnabledBackgroundProviders
{-# INLINE v1VikunjaInfosEnabledBackgroundProvidersL #-}

-- | 'v1VikunjaInfosFrontendUrl' Lens
v1VikunjaInfosFrontendUrlL :: Lens_' V1VikunjaInfos (Maybe Text)
v1VikunjaInfosFrontendUrlL f V1VikunjaInfos{..} = (\v1VikunjaInfosFrontendUrl -> V1VikunjaInfos { v1VikunjaInfosFrontendUrl, ..} ) <$> f v1VikunjaInfosFrontendUrl
{-# INLINE v1VikunjaInfosFrontendUrlL #-}

-- | 'v1VikunjaInfosLegal' Lens
v1VikunjaInfosLegalL :: Lens_' V1VikunjaInfos (Maybe V1LegalInfo)
v1VikunjaInfosLegalL f V1VikunjaInfos{..} = (\v1VikunjaInfosLegal -> V1VikunjaInfos { v1VikunjaInfosLegal, ..} ) <$> f v1VikunjaInfosLegal
{-# INLINE v1VikunjaInfosLegalL #-}

-- | 'v1VikunjaInfosLinkSharingEnabled' Lens
v1VikunjaInfosLinkSharingEnabledL :: Lens_' V1VikunjaInfos (Maybe Bool)
v1VikunjaInfosLinkSharingEnabledL f V1VikunjaInfos{..} = (\v1VikunjaInfosLinkSharingEnabled -> V1VikunjaInfos { v1VikunjaInfosLinkSharingEnabled, ..} ) <$> f v1VikunjaInfosLinkSharingEnabled
{-# INLINE v1VikunjaInfosLinkSharingEnabledL #-}

-- | 'v1VikunjaInfosMaxFileSize' Lens
v1VikunjaInfosMaxFileSizeL :: Lens_' V1VikunjaInfos (Maybe Text)
v1VikunjaInfosMaxFileSizeL f V1VikunjaInfos{..} = (\v1VikunjaInfosMaxFileSize -> V1VikunjaInfos { v1VikunjaInfosMaxFileSize, ..} ) <$> f v1VikunjaInfosMaxFileSize
{-# INLINE v1VikunjaInfosMaxFileSizeL #-}

-- | 'v1VikunjaInfosMotd' Lens
v1VikunjaInfosMotdL :: Lens_' V1VikunjaInfos (Maybe Text)
v1VikunjaInfosMotdL f V1VikunjaInfos{..} = (\v1VikunjaInfosMotd -> V1VikunjaInfos { v1VikunjaInfosMotd, ..} ) <$> f v1VikunjaInfosMotd
{-# INLINE v1VikunjaInfosMotdL #-}

-- | 'v1VikunjaInfosPublicTeamsEnabled' Lens
v1VikunjaInfosPublicTeamsEnabledL :: Lens_' V1VikunjaInfos (Maybe Bool)
v1VikunjaInfosPublicTeamsEnabledL f V1VikunjaInfos{..} = (\v1VikunjaInfosPublicTeamsEnabled -> V1VikunjaInfos { v1VikunjaInfosPublicTeamsEnabled, ..} ) <$> f v1VikunjaInfosPublicTeamsEnabled
{-# INLINE v1VikunjaInfosPublicTeamsEnabledL #-}

-- | 'v1VikunjaInfosRegistrationEnabled' Lens
v1VikunjaInfosRegistrationEnabledL :: Lens_' V1VikunjaInfos (Maybe Bool)
v1VikunjaInfosRegistrationEnabledL f V1VikunjaInfos{..} = (\v1VikunjaInfosRegistrationEnabled -> V1VikunjaInfos { v1VikunjaInfosRegistrationEnabled, ..} ) <$> f v1VikunjaInfosRegistrationEnabled
{-# INLINE v1VikunjaInfosRegistrationEnabledL #-}

-- | 'v1VikunjaInfosTaskAttachmentsEnabled' Lens
v1VikunjaInfosTaskAttachmentsEnabledL :: Lens_' V1VikunjaInfos (Maybe Bool)
v1VikunjaInfosTaskAttachmentsEnabledL f V1VikunjaInfos{..} = (\v1VikunjaInfosTaskAttachmentsEnabled -> V1VikunjaInfos { v1VikunjaInfosTaskAttachmentsEnabled, ..} ) <$> f v1VikunjaInfosTaskAttachmentsEnabled
{-# INLINE v1VikunjaInfosTaskAttachmentsEnabledL #-}

-- | 'v1VikunjaInfosTaskCommentsEnabled' Lens
v1VikunjaInfosTaskCommentsEnabledL :: Lens_' V1VikunjaInfos (Maybe Bool)
v1VikunjaInfosTaskCommentsEnabledL f V1VikunjaInfos{..} = (\v1VikunjaInfosTaskCommentsEnabled -> V1VikunjaInfos { v1VikunjaInfosTaskCommentsEnabled, ..} ) <$> f v1VikunjaInfosTaskCommentsEnabled
{-# INLINE v1VikunjaInfosTaskCommentsEnabledL #-}

-- | 'v1VikunjaInfosTotpEnabled' Lens
v1VikunjaInfosTotpEnabledL :: Lens_' V1VikunjaInfos (Maybe Bool)
v1VikunjaInfosTotpEnabledL f V1VikunjaInfos{..} = (\v1VikunjaInfosTotpEnabled -> V1VikunjaInfos { v1VikunjaInfosTotpEnabled, ..} ) <$> f v1VikunjaInfosTotpEnabled
{-# INLINE v1VikunjaInfosTotpEnabledL #-}

-- | 'v1VikunjaInfosUserDeletionEnabled' Lens
v1VikunjaInfosUserDeletionEnabledL :: Lens_' V1VikunjaInfos (Maybe Bool)
v1VikunjaInfosUserDeletionEnabledL f V1VikunjaInfos{..} = (\v1VikunjaInfosUserDeletionEnabled -> V1VikunjaInfos { v1VikunjaInfosUserDeletionEnabled, ..} ) <$> f v1VikunjaInfosUserDeletionEnabled
{-# INLINE v1VikunjaInfosUserDeletionEnabledL #-}

-- | 'v1VikunjaInfosVersion' Lens
v1VikunjaInfosVersionL :: Lens_' V1VikunjaInfos (Maybe Text)
v1VikunjaInfosVersionL f V1VikunjaInfos{..} = (\v1VikunjaInfosVersion -> V1VikunjaInfos { v1VikunjaInfosVersion, ..} ) <$> f v1VikunjaInfosVersion
{-# INLINE v1VikunjaInfosVersionL #-}

-- | 'v1VikunjaInfosWebhooksEnabled' Lens
v1VikunjaInfosWebhooksEnabledL :: Lens_' V1VikunjaInfos (Maybe Bool)
v1VikunjaInfosWebhooksEnabledL f V1VikunjaInfos{..} = (\v1VikunjaInfosWebhooksEnabled -> V1VikunjaInfos { v1VikunjaInfosWebhooksEnabled, ..} ) <$> f v1VikunjaInfosWebhooksEnabled
{-# INLINE v1VikunjaInfosWebhooksEnabledL #-}



-- * WebHTTPError

-- | 'webHTTPErrorCode' Lens
webHTTPErrorCodeL :: Lens_' WebHTTPError (Maybe Int)
webHTTPErrorCodeL f WebHTTPError{..} = (\webHTTPErrorCode -> WebHTTPError { webHTTPErrorCode, ..} ) <$> f webHTTPErrorCode
{-# INLINE webHTTPErrorCodeL #-}

-- | 'webHTTPErrorMessage' Lens
webHTTPErrorMessageL :: Lens_' WebHTTPError (Maybe Text)
webHTTPErrorMessageL f WebHTTPError{..} = (\webHTTPErrorMessage -> WebHTTPError { webHTTPErrorMessage, ..} ) <$> f webHTTPErrorMessage
{-# INLINE webHTTPErrorMessageL #-}


